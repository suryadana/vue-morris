{"version":3,"sources":["webpack:///vue-morris.min.js","webpack:///webpack/bootstrap 090c88a4d2f9cc71051e","webpack:///./src/util/converter.js","webpack:///./src/components/chart-mixins.js","webpack:///./~/morris.js/morris.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/morris.js/morris.css?ee78","webpack:///./src/components/area-chart.vue","webpack:///./src/components/bar-chart.vue","webpack:///./src/components/donut-chart.vue","webpack:///./src/components/line-chart.vue","webpack:///area-chart.vue","webpack:///bar-chart.vue","webpack:///donut-chart.vue","webpack:///line-chart.vue","webpack:///./src/index.js","webpack:///./~/morris.js/morris.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/area-chart.vue?d30e","webpack:///./src/components/line-chart.vue?24e8","webpack:///./src/components/bar-chart.vue?7fcf","webpack:///./src/components/donut-chart.vue?5e3b","webpack:///./~/vue-style-loader/addStyles.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Converter","toObject","data","JSON","parse","toBoolean","toInt","parseInt","_converter","_converter2","obj","default","Props","id","type","String","required","Array","barColors","Function","xkey","ykeys","labels","hoverCallback","axes","Boolean","hideHover","stacked","resize","horizontal","grid","gridTextColor","gridTextSize","Number","gridTextFamily","gridTextWeight","colors","formatter","lineColors","xLabels","lineWidth","pointSize","pointFillColors","pointStrokeColors","ymax","ymin","smooth","parseTime","postUnits","preUnits","dateFormat","xLabelFormat","yLabelFormat","xLabelAngle","goals","goalStrokeWidth","goalLineColors","events","eventStrokeWidth","eventLineColors","fillOpacity","behaveLikeLine","BarProps","DonutProps","LineProps","AreaProps","prop","ChartMethods","addOption","options","this","addOptionAsObject","bar","props","methods","donut","line","area","$","Morris","minutesSpecHelper","secondsSpecHelper","__slice","slice","__bind","fn","me","apply","arguments","__hasProp","__extends","child","parent","ctor","constructor","key","__super__","__indexOf","indexOf","item","length","window","jQuery","EventEmitter","on","handler","handlers","push","fire","args","_i","_len","_ref","_results","commas","num","absnum","intnum","ret","strabsnum","Math","abs","floor","toFixed","replace","toString","pad2","number","Grid","_super","hasToShow","resizeHandler","_this","element","el","document","getElementById","Error","css","extend","gridDefaults","defaults","units","raphael","Raphael","elementWidth","elementHeight","dirty","selectFrom","init","setData","bind","evt","left","offset","right","width","x","pageX","hitTest","min","_x","max","selectionRect","attr","pageY","top","hide","touch","originalEvent","touches","changedTouches","rangeSelect","rect","innerHeight","fill","rangeSelectColor","stroke","toBack","startRange","endRange","timeoutId","clearTimeout","setTimeout","postInit","gridLineColor","gridStrokeWidth","numLines","padding","redraw","e","flatEvents","from","idx","index","maxGoal","minGoal","row","step","to","total","y","ykey","yval","_ref1","clear","hover","cumulative","src","label","parseDate","Date","_j","_len1","_results1","parseFloat","sort","a","b","xmin","xmax","map","yboundary","autoGridLines","_ref3","boundaryType","currentValue","boundaryOption","suggestedValue","nlines","gmax","gmin","smag","span","unit","ymag","log","pow","ceil","_calc","angle","bottomOffsets","gridLine","h","w","yLabelWidths","height","bottom","measureText","yAxisFormat","_ref2","dx","dy","yStart","yEnd","xStart","xEnd","xSize","ySize","calc","transY","transX","drawGrid","drawGoals","drawEvents","draw","text","tt","rotate","getBBox","remove","getYAxisLabelX","basePos","lineY","pos","getXAxisLabelY","drawXAxisLabel","drawYAxisLabel","drawGridLine","color","goal","drawGoal","event","drawEvent","path","xPos","yPos","show","end","start","setSize","shown","date","isecs","msecs","offsetmins","q","r","secs","match","getTime","getDay","setMonth","UTC","round","Hover","append","class","update","html","centre_y","moveTo","content","hoverHeight","hoverWidth","parentHeight","parentWidth","innerWidth","outerWidth","outerHeight","Line","hilight","onHoverOut","onHoverMove","onGridClick","pointStrokeWidths","xLabelMargin","trendLine","trendLineWidth","trendLineColors","calcPoints","generatePaths","_y","_ymax","concat","displayHoverForRow","hoverContentForRow","j","colorFor","coords","paths","createPath","drawXAxis","drawSeries","drawLabel","prevAngleMargin","prevLabelMargin","ypos","labelText","xpos","labelBox","margin","textBox","transform","cos","PI","sin","labelSeries","reverse","seriesPoints","_drawTrendLine","_drawLineFor","_drawPointFor","circle","drawLinePoint","drawLinePath","datapoints","sum_x","sum_xx","sum_xy","sum_y","val","coord","g","grads","ix","lg","prevCoord","x1","x2","y1","y2","gradients","grad","nextCoord","prevHilight","animate","pointShrinkSeries","pointGrowSeries","sidx","lineColor","lineIndex","lineWidthForSeries","pointColor","pointSizeForSeries","pointStrokeWidthForSeries","pointStrokeColorForSeries","animation","dmin","dmax","pxwidth","specName","d0","ddensity","spec","t","LABEL_SPECS","AUTO_LABEL_ORDER","fmt","incr","interval","getFullYear","getMonth","getDate","getHours","getMinutes","setUTCMinutes","getUTCMinutes","getSeconds","setUTCSeconds","getUTCSeconds","decade","setFullYear","year","month","week","setDate","day","hour","30min","15min","10min","5min","minute","30sec","15sec","10sec","5sec","second","Area","areaOptions","areaDefaults","range","_k","_results2","_drawFillFor","drawFilledPath","fillForSeries","rgb2hsl","hsl","Bar","barSizeRatio","barGap","barOpacity","barRadius","calcBars","maxSize","size","startPos","xAxisLabelTopPadding","barWidth","groupWidth","lastTop","leftPadding","numBars","spaceLeft","zeroPos","barSize","bars","verticalGridCondition","drawBar","verticalGridColor","verticalGridOpacity","barColor","opacity","radiusArray","maxRadius","roundedRect","Donut","select","click","backgroundColor","labelColor","C","cx","cy","last","max_value","next","seg","_len2","values","segments","DonutSegment","render","text1","drawEmptyDonutLabel","text2","segment","deselect","setLabels","label1","label2","inner","maxHeightBottom","maxHeightTop","maxWidth","text1bbox","text1scale","text2bbox","text2scale","fontSize","fontWeight","outer","p0","p1","sin_p0","cos_p0","sin_p1","cos_p1","is_long","calcSegment","selectedPath","calcArc","calcArcPoints","r1","r2","ix0","ix1","iy0","iy1","ox0","ox1","oy0","oy1","arc","drawDonutArc","drawDonutSegment","stroke-width","fillColor","strokeColor","hoverFunction","clickFunction","selected","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","staticRenderFns","_scopeId","computed","keys","forEach","locals","Component","_interopRequireDefault","_chartMixins","_chartMixins2","mixins","chart","watch","$nextTick","mounted","createChart","_donutChart","_donutChart2","_barChart","_barChart2","_lineChart","_lineChart2","_areaChart","_areaChart2","VueMorris","DonutChart","BarChart","LineChart","AreaChart","list","result","join","mediaQuery","alreadyImportedModules","_vm","_h","$createElement","_self","_c","attrs","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","removeStyleElement","parentNode","removeChild","splice","createStyleElement","createElement","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","stringify","memoize","memo","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","filter"],"mappings":"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","file":"vue-morris.min.js","sourcesContent":["define(\"VueMorris\", [], function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Converter = {\n  toObject: function toObject(data) {\n    if (typeof data === 'string') {\n      return JSON.parse(data);\n    }\n    return data;\n  },\n\n  toBoolean: function toBoolean(data) {\n    if (typeof data === 'string') {\n      return data === 'true';\n    }\n    return data;\n  },\n\n  toInt: function toInt(data) {\n    if (typeof data === 'string') {\n      return parseInt(data);\n    }\n    return data;\n  }\n};\n\nmodule.exports = Converter;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Props = {\n  id: { type: String, required: true },\n  data: { type: [String, Array], required: true },\n  barColors: { type: [String, Array, Function], required: false },\n  xkey: { type: String, required: false, default: 'key' },\n  ykeys: { type: [String, Array], required: false, default: function _default() {\n      return ['value'];\n    } },\n  labels: { type: [String, Array], required: false, default: function _default() {\n      return ['Value'];\n    } },\n  hoverCallback: { type: Function, required: false },\n  axes: { type: [Boolean, String], required: false, default: true },\n  hideHover: { type: String, required: false },\n  stacked: { type: [Boolean, String], required: false },\n  resize: { type: [Boolean, String], required: false },\n  horizontal: { type: [Boolean, String], required: false, default: false },\n  grid: { type: [Boolean, String], required: false, default: true },\n  gridTextColor: { type: String, required: false, default: '#888' },\n  gridTextSize: { type: [Number, String], required: false, default: 12 },\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\n  gridTextWeight: { type: String, required: false, default: 'normal' },\n\n  colors: { type: [String, Array], required: false },\n  formatter: { type: Function, required: false },\n\n  lineColors: { type: [String, Array, Function], required: false },\n  xLabels: { type: String, required: false },\n  lineWidth: { type: [Number, String], required: false },\n  pointSize: { type: [Number, String], required: false },\n  pointFillColors: { type: [String, Array], required: false },\n  pointStrokeColors: { type: [String, Array], required: false },\n  ymax: { type: String, required: false },\n  ymin: { type: String, required: false },\n  smooth: { type: [Boolean, String], required: false, default: true },\n  parseTime: { type: [Boolean, String], required: false, default: true },\n  postUnits: { type: String, required: false },\n  preUnits: { type: String, required: false },\n  dateFormat: { type: Function, required: false },\n  xLabelFormat: { type: Function, required: false },\n  yLabelFormat: { type: Function, required: false },\n  xLabelAngle: { type: String, required: false },\n  goals: { type: [String, Array], required: false },\n  goalStrokeWidth: { type: [Number, String], required: false },\n  goalLineColors: { type: [String, Array], required: false },\n  events: { type: [String, Array], required: false },\n  eventStrokeWidth: { type: String, required: false },\n  eventLineColors: { type: [String, Array], required: false },\n  fillOpacity: { type: String, required: false },\n\n  behaveLikeLine: { type: [Boolean, String], required: false, default: false }\n};\n\nvar BarProps = {\n  id: Props.id,\n  data: Props.data,\n  barColors: Props.barColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  hoverCallback: Props.hoverCallback,\n  grid: Props.grid,\n  horizontal: Props.horizontal,\n  axes: Props.axes,\n  hideHover: Props.hideHover,\n  stacked: Props.stacked,\n  resize: Props.resize,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight\n};\n\nvar DonutProps = {\n  id: Props.id,\n  data: Props.data,\n  colors: Props.colors,\n  formatter: Props.formatter,\n  resize: Props.resize\n};\n\nvar LineProps = {\n  id: Props.id,\n  data: Props.data,\n  resize: Props.resize,\n  lineColors: Props.lineColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabels: Props.xLabels,\n  grid: Props.grid,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight,\n  lineWidth: Props.lineWidth,\n  pointSize: Props.pointSize,\n  pointFillColors: Props.pointFillColors,\n  pointStrokeColors: Props.pointStrokeColors,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  smooth: Props.smooth,\n  hideHover: Props.hideHover,\n  parseTime: Props.parseTime,\n  postUnits: Props.postUnits,\n  preUnits: Props.preUnits,\n  dateFormat: Props.dateFormat,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  xLabelAngle: Props.xLabelAngle,\n  goals: Props.goals,\n  goalStrokeWidth: Props.goalStrokeWidth,\n  goalLineColors: Props.goalLineColors,\n  events: Props.events,\n  eventStrokeWidth: Props.eventStrokeWidth,\n  eventLineColors: Props.eventLineColors,\n  fillOpacity: Props.fillOpacity,\n  hoverCallback: Props.hoverCallback\n};\n\nvar AreaProps = {\n  behaveLikeLine: Props.behaveLikeLine\n};\n\nfor (var prop in LineProps) {\n  if (LineProps.hasOwnProperty(prop)) {\n    AreaProps[prop] = LineProps[prop];\n  }\n}\n\nvar ChartMethods = {\n  addOption: function addOption(name, options) {\n    if (this[name]) {\n      options[name] = this[name];\n    }\n  },\n  addOptionAsObject: function addOptionAsObject(name, options) {\n    if (this[name]) {\n      options[name] = _converter2.default.toObject(this[name]);\n    }\n  }\n};\n\nexports.default = {\n  bar: {\n    props: BarProps,\n    methods: ChartMethods\n  },\n\n  donut: {\n    props: DonutProps,\n    methods: ChartMethods\n  },\n\n  line: {\n    props: LineProps,\n    methods: ChartMethods\n  },\n\n  area: {\n    props: AreaProps,\n    methods: ChartMethods\n  }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/* @license\nmorris.js v0.5.1\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var $, Morris, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  $ = jQuery;\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.hasToShow = __bind(this.hasToShow, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      var _this = this;\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if ((this.el == null) || this.el.length === 0) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (this.el.css('position') === 'static') {\n        this.el.css('position', 'relative');\n      }\n      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      this.el.bind('mousemove', function(evt) {\n        var left, offset, right, width, x;\n        offset = _this.el.offset();\n        x = evt.pageX - offset.left;\n        if (_this.selectFrom) {\n          left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\n          right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\n          width = right - left;\n          return _this.selectionRect.attr({\n            x: left,\n            width: width\n          });\n        } else {\n          return _this.fire('hovermove', x, evt.pageY - offset.top);\n        }\n      });\n      this.el.bind('mouseleave', function(evt) {\n        if (_this.selectFrom) {\n          _this.selectionRect.hide();\n          _this.selectFrom = null;\n        }\n        return _this.fire('hoverout');\n      });\n      this.el.bind('touchstart touchmove touchend', function(evt) {\n        var offset, touch;\n        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n        offset = _this.el.offset();\n        return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n      });\n      this.el.bind('click', function(evt) {\n        var offset;\n        offset = _this.el.offset();\n        return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n      });\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        this.el.bind('mousedown', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          return _this.startRange(evt.pageX - offset.left);\n        });\n        this.el.bind('mouseup', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          _this.endRange(evt.pageX - offset.left);\n          return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n        });\n      }\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: false,\n      yLabelFormat: null,\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      preUnits: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      goals: [],\n      goalStrokeWidth: 1.0,\n      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: false\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, flatEvents, from, idx, index, maxGoal, minGoal, ret, row, step, to, total, y, ykey, ymax, ymin, yval, _i, _len, _ref, _ref1;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if ((yval != null) && this.hasToShow(idx)) {\n                if (this.cumulative) {\n                  total += yval;\n                } else {\n                  if (ymax != null) {\n                    ymax = Math.max(yval, ymax);\n                    ymin = Math.min(yval, ymin);\n                  } else {\n                    ymax = ymin = yval;\n                  }\n                }\n              }\n              if (this.cumulative && (total != null)) {\n                ymax = Math.max(total, ymax);\n                ymin = Math.min(total, ymin);\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          _ref = this.options.events;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            e = _ref[_i];\n            if (e instanceof Array) {\n              from = e[0], to = e[1];\n              this.events.push([Morris.parseDate(from), Morris.parseDate(to)]);\n            } else {\n              this.events.push(Morris.parseDate(e));\n            }\n          }\n        } else {\n          this.events = this.options.events;\n        }\n        flatEvents = $.map(this.events, function(e) {\n          return e;\n        });\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, flatEvents));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, flatEvents));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin, _ref3 = this.ymax; step > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step) {\n              _results.push(y);\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var angle, bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\n      w = this.el.width();\n      h = this.el.height();\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\n          yLabelWidths = (function() {\n            var _i, _len, _ref1, _results;\n            _ref1 = this.grid;\n            _results = [];\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              gridLine = _ref1[_i];\n              _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.left += Math.max.apply(Math, yLabelWidths);\n          } else {\n            this.bottom -= Math.max.apply(Math, yLabelWidths);\n          }\n        }\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\n          if (!this.options.horizontal) {\n            angle = -this.options.xLabelAngle;\n          } else {\n            angle = -90;\n          }\n          bottomOffsets = (function() {\n            var _i, _ref2, _results;\n            _results = [];\n            for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].label, angle).height);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.bottom -= Math.max.apply(Math, bottomOffsets);\n          } else {\n            this.left += Math.max.apply(Math, bottomOffsets);\n          }\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        if (!this.options.horizontal) {\n          this.dx = this.width / (this.xmax - this.xmin);\n          this.dy = this.height / (this.ymax - this.ymin);\n          this.yStart = this.bottom;\n          this.yEnd = this.top;\n          this.xStart = this.left;\n          this.xEnd = this.right;\n          this.xSize = this.width;\n          this.ySize = this.height;\n        } else {\n          this.dx = this.height / (this.xmax - this.xmin);\n          this.dy = this.width / (this.ymax - this.ymin);\n          this.yStart = this.left;\n          this.yEnd = this.right;\n          this.xStart = this.top;\n          this.xEnd = this.bottom;\n          this.xSize = this.height;\n          this.ySize = this.width;\n        }\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin) * this.dy;\n      } else {\n        return this.left + (y - this.ymin) * this.dy;\n      }\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.xStart + this.xEnd) / 2;\n      } else {\n        return this.xStart + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawGoals();\n      this.drawEvents();\n      if (this.draw) {\n        return this.draw();\n      }\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label, 0);\n    };\n\n    Grid.prototype.yLabelFormat = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n      }\n    };\n\n    Grid.prototype.getYAxisLabelX = function() {\n      return this.left - this.options.padding / 2;\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var basePos, lineY, pos, _i, _len, _ref, _ref1, _ref2, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      if (!this.options.horizontal) {\n        basePos = this.getYAxisLabelX();\n      } else {\n        basePos = this.getXAxisLabelY();\n      }\n      _ref1 = this.grid;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        lineY = _ref1[_i];\n        pos = this.transY(lineY);\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n          if (!this.options.horizontal) {\n            this.drawYAxisLabel(basePos, pos, this.yAxisFormat(lineY));\n          } else {\n            this.drawXAxisLabel(pos, basePos, this.yAxisFormat(lineY));\n          }\n        }\n        if (this.options.grid) {\n          pos = Math.floor(pos) + 0.5;\n          if (!this.options.horizontal) {\n            _results.push(this.drawGridLine(\"M\" + this.xStart + \",\" + pos + \"H\" + this.xEnd));\n          } else {\n            _results.push(this.drawGridLine(\"M\" + pos + \",\" + this.xStart + \"V\" + this.xEnd));\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _len, _ref, _results;\n      _ref = this.options.goals;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        _results.push(this.drawGoal(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      _ref = this.events;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        event = _ref[i];\n        color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n        _results.push(this.drawEvent(event, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      var from, path, to, x;\n      if (event instanceof Array) {\n        from = event[0], to = event[1];\n        from = Math.floor(this.transX(from)) + 0.5;\n        to = Math.floor(this.transX(to)) + 0.5;\n        if (!this.options.horizontal) {\n          return this.raphael.rect(from, this.yEnd, to - from, this.yStart - this.yEnd).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          return this.raphael.rect(this.yStart, from, this.yEnd - this.yStart, to - from).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        x = Math.floor(this.transX(event)) + 0.5;\n        if (!this.options.horizontal) {\n          path = \"M\" + x + \",\" + this.yStart + \"V\" + this.yEnd;\n        } else {\n          path = \"M\" + this.yStart + \",\" + x + \"H\" + this.yEnd;\n        }\n        return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n      }\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    Grid.prototype.hasToShow = function(i) {\n      return this.options.shown === true || this.options.shown[i] === true;\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = $.extend({}, Morris.Hover.defaults, options);\n      this.el = $(\"<div class='\" + this.options[\"class\"] + \"'></div>\");\n      this.el.hide();\n      this.options.parent.append(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y, centre_y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y, centre_y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.html(content);\n    };\n\n    Hover.prototype.moveTo = function(x, y, centre_y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\n      parentWidth = this.options.parent.innerWidth();\n      parentHeight = this.options.parent.innerHeight();\n      hoverWidth = this.el.outerWidth();\n      hoverHeight = this.el.outerHeight();\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        if (centre_y === true) {\n          top = y - hoverHeight / 2;\n          if (top < 0) {\n            top = 0;\n          }\n        } else {\n          top = y - hoverHeight - 10;\n          if (top < 0) {\n            top = y + 10;\n            if (top + hoverHeight > parentHeight) {\n              top = parentHeight / 2 - hoverHeight / 2;\n            }\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      return this.el.css({\n        left: left + \"px\",\n        top: parseInt(top) + \"px\"\n      });\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.show();\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.hide();\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      smooth: true,\n      shown: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 24,\n      hideHover: false,\n      trendLine: false,\n      trendLineWidth: 2,\n      trendLineColors: ['#689bc3', '#a2b3bf', '#64b764']\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row._y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        })())));\n      }\n      return _results;\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var content, j, row, y, _i, _len, _ref;\n      row = this.data[index];\n      content = $(\"<div class='morris-hover-row-label'>\").text(row.label);\n      content = content.prop('outerHTML');\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      return [content, row._x, row._ymax];\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          coords = (function() {\n            var _j, _len, _ref2, _results1;\n            _ref2 = this.data;\n            _results1 = [];\n            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n              r = _ref2[_j];\n              if (r._y[i] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y[i]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      _results = [];\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        _results.push(drawLabel(l[0], l[1]));\n      }\n      return _results;\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        if (this.hasToShow(i)) {\n          if (this.options.trendLine !== false && this.options.trendLine === true || this.options.trendLine[i] === true) {\n            this._drawTrendLine(i);\n          }\n          this._drawLineFor(i);\n        }\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        if (this.hasToShow(i)) {\n          _results.push(this._drawPointFor(i));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.prototype._drawTrendLine = function(index) {\n      var a, b, data, datapoints, path, sum_x, sum_xx, sum_xy, sum_y, val, x, y, _i, _len, _ref;\n      sum_x = 0;\n      sum_y = 0;\n      sum_xx = 0;\n      sum_xy = 0;\n      datapoints = 0;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        val = _ref[_i];\n        x = val.x;\n        y = val.y[index];\n        if (y === void 0) {\n          continue;\n        }\n        datapoints += 1;\n        sum_x += x;\n        sum_y += y;\n        sum_xx += x * x;\n        sum_xy += x * y;\n      }\n      a = (datapoints * sum_xy - sum_x * sum_y) / (datapoints * sum_xx - sum_x * sum_x);\n      b = (sum_y / datapoints) - ((a * sum_x) / datapoints);\n      data = [{}, {}];\n      data[0].x = this.transX(this.data[0].x);\n      data[0].y = this.transY(this.data[0].x * a + b);\n      data[1].x = this.transX(this.data[this.data.length - 1].x);\n      data[1].y = this.transY(this.data[this.data.length - 1].x * a + b);\n      path = Morris.Line.createPath(data, false, this.bottom);\n      return path = this.raphael.path(path).attr('stroke', this.colorFor(null, index, 'trendLine')).attr('stroke-width', this.options.trendLineWidth);\n    };\n\n    Line.createPath = function(coords, smooth, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (smooth) {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (smooth) {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (!smooth || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else if (type === 'line') {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      } else {\n        return this.options.trendLineColors[sidx % this.options.trendLineColors.length];\n      }\n    };\n\n    Line.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      if (this.pointSizeForSeries(index) === 0) {\n        return;\n      }\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + 3\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = $.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = $.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var row, total, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              _results1.push(this.transY(y));\n            } else {\n              total += y || 0;\n              _results1.push(this.transY(total));\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.max.apply(Math, row._y));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      _results2 = [];\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        return this.drawFilledPath(path, this.fillForSeries(index));\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill) {\n      return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, $.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      barOpacity: 1.0,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 50,\n      horizontal: false,\n      shown: true\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.xStart + this.xSize * (idx + 0.5) / this.data.length;\n        _results.push(row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(null);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      return this.drawSeries();\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var angle, basePos, i, label, labelBox, margin, maxSize, offset, prevAngleMargin, prevLabelMargin, row, size, startPos, textBox, _i, _ref, _results;\n      if (!this.options.horizontal) {\n        basePos = this.getXAxisLabelY();\n      } else {\n        basePos = this.getYAxisLabelX();\n      }\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        if (!this.options.horizontal) {\n          label = this.drawXAxisLabel(row._x, basePos, row.label);\n        } else {\n          label = this.drawYAxisLabel(basePos, row._x - 0.5 * this.options.gridTextSize, row.label);\n        }\n        if (!this.options.horizontal) {\n          angle = this.options.xLabelAngle;\n        } else {\n          angle = 0;\n        }\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-angle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (angle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(angle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        if (!this.options.horizontal) {\n          startPos = labelBox.x;\n          size = labelBox.width;\n          maxSize = this.el.width();\n        } else {\n          startPos = labelBox.y;\n          size = labelBox.height;\n          maxSize = this.el.height();\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= startPos + size || (prevAngleMargin != null) && prevAngleMargin >= startPos) && startPos >= 0 && (startPos + size) < maxSize) {\n          if (angle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(angle * Math.PI / 180.0);\n            prevAngleMargin = startPos - margin;\n          }\n          if (!this.options.horizontal) {\n            _results.push(prevLabelMargin = startPos - this.options.xLabelMargin);\n          } else {\n            _results.push(prevLabelMargin = startPos);\n          }\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.getXAxisLabelY = function() {\n      return this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barWidth, bottom, groupWidth, i, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos, _i, _ref;\n      groupWidth = this.xSize / this.options.data.length;\n      if (this.options.stacked) {\n        numBars = 1;\n      } else {\n        numBars = 0;\n        for (i = _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i)) {\n            numBars += 1;\n          }\n        }\n      }\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _j, _len, _ref1, _results;\n        _ref1 = this.data;\n        _results = [];\n        for (idx = _j = 0, _len = _ref1.length; _j < _len; idx = ++_j) {\n          row = _ref1[idx];\n          lastTop = 0;\n          _results.push((function() {\n            var _k, _len1, _ref2, _results1;\n            _ref2 = row._y;\n            _results1 = [];\n            for (sidx = _k = 0, _len1 = _ref2.length; _k < _len1; sidx = ++_k) {\n              ypos = _ref2[sidx];\n              if (!this.hasToShow(sidx)) {\n                continue;\n              }\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.xStart + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  if (!this.options.horizontal) {\n                    this.drawBar(this.xStart + idx * groupWidth, this.yEnd, groupWidth, this.ySize, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  } else {\n                    this.drawBar(this.yStart, this.xStart + idx * groupWidth, this.ySize, groupWidth, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  }\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                if (!this.options.horizontal) {\n                  this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  _results1.push(lastTop += size);\n                } else {\n                  this.drawBar(top, left, size, barWidth, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  _results1.push(lastTop -= size);\n                }\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x, y) {\n      var pos;\n      if (this.data.length === 0) {\n        return null;\n      }\n      if (!this.options.horizontal) {\n        pos = x;\n      } else {\n        pos = y;\n      }\n      pos = Math.max(Math.min(pos, this.xEnd), this.xStart);\n      return Math.min(this.data.length - 1, Math.floor((pos - this.xStart) / (this.xSize / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x, y);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x, y);\n      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, j, row, x, y, _i, _len, _ref;\n      row = this.data[index];\n      content = $(\"<div class='morris-hover-row-label'>\").text(row.label);\n      content = content.prop('outerHTML');\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (!this.options.horizontal) {\n        x = this.left + (index + 0.5) * this.width / this.data.length;\n        return [content, x];\n      } else {\n        x = this.left + 0.5 * this.width;\n        y = this.top + (index + 0.5) * this.height / this.data.length;\n        return [content, x, y, true];\n      }\n    };\n\n    Bar.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (maxRadius === 0 || maxRadius > height) {\n        path = this.raphael.rect(xPos, yPos, width, height);\n      } else {\n        path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      formatter: Morris.commas,\n      resize: false\n    };\n\n    function Donut(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var _this = this;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = $.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if (this.el === null || this.el.length === 0) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      if (options.data === void 0 || options.data.length === 0) {\n        return;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.redraw = function() {\n      var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n      this.raphael.clear();\n      cx = this.el.width() / 2;\n      cy = this.el.height() / 2;\n      w = (Math.min(cx, cy) - 10) / 3;\n      total = 0;\n      _ref = this.values;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        value = _ref[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref1 = this.values;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        value = _ref1[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      _ref2 = this.values;\n      _results = [];\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        value = _ref2[_k];\n        if (value === max_value) {\n          this.select(idx);\n          break;\n        }\n        _results.push(idx += 1);\n      }\n      return _results;\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      return this.setLabels(row.label, this.options.formatter(row.value, row));\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\n      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      this.arc = this.drawDonutArc(this.hilight, this.color);\n      return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n        return _this.fire('hover', _this.index);\n      }, function() {\n        return _this.fire('click', _this.index);\n      });\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      return this.raphael.path(path).attr({\n        stroke: color,\n        'stroke-width': 2,\n        opacity: 0\n      });\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction) {\n      return this.raphael.path(path).attr({\n        fill: fillColor,\n        stroke: strokeColor,\n        'stroke-width': 3\n      }).hover(hoverFunction).click(clickFunction);\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        this.seg.animate({\n          path: this.selectedPath\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 1\n        }, 150, '<>');\n        return this.selected = true;\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(14);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(20)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(9),\n  /* template */\n  __webpack_require__(16),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(10),\n  /* template */\n  __webpack_require__(18),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(11),\n  /* template */\n  __webpack_require__(19),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(12),\n  /* template */\n  __webpack_require__(17),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'area-chart',\n\n  mixins: [_chartMixins2.default.area],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['lineColors']) {\n          _this.chart.options['lineColors'] = _converter2.default.toObject(_this['lineColors']);\n        }\n\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: _converter2.default.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: _converter2.default.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity,\n      behaveLikeLine: this.behaveLikeLine\n    };\n\n    this.addOptionAsObject('lineColors', options);\n    this.addOption('xLabels', options);\n    this.addOptionAsObject('pointFillColors', options);\n    this.addOptionAsObject('pointStrokeColors', options);\n    this.addOption('dateFormat', options);\n    this.addOption('xLabelFormat', options);\n    this.addOption('yLabelFormat', options);\n    this.addOptionAsObject('goals', options);\n    this.addOptionAsObject('goalLineColors', options);\n    this.addOptionAsObject('events', options);\n    this.addOptionAsObject('eventLineColors', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Area(options);\n  }\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'bar-chart',\n\n  mixins: [_chartMixins2.default.bar],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['barColors']) {\n          _this.chart.options['barColors'] = _converter2.default.toObject(_this['barColors']);\n        }\n\n        _this.chart.setData(_this.data);\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      labels: _converter2.default.toObject(this.labels),\n      resize: _converter2.default.toBoolean(this.resize),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      axes: _converter2.default.toBoolean(this.axes),\n      hideHover: this.hideHover,\n      horizontal: _converter2.default.toBoolean(this.horizontal),\n      stacked: _converter2.default.toBoolean(this.stacked),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize\n    };\n\n    this.addOptionAsObject('barColors', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Bar(options);\n  }\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'donut-chart',\n\n  mixins: [_chartMixins2.default.donut],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        if (_this.data && _this.data.length > 0 && !_this.chart) {\n          _this.createChart();\n        }\n\n        if (_this.chart) {\n          if (_this['colors']) {\n            _this.chart.options['colors'] = _converter2.default.toObject(_this['colors']);\n          }\n\n          _this.chart.setData(_converter2.default.toObject(_this.data));\n        }\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    if (this.data && this.data.length > 0) {\n      this.createChart();\n    }\n  },\n\n\n  methods: {\n    createChart: function createChart() {\n      var options = {\n        element: this.id,\n        data: _converter2.default.toObject(this.data),\n        resize: _converter2.default.toBoolean(this.resize)\n      };\n\n      this.addOptionAsObject('colors', options);\n      this.addOption('formatter', options);\n\n      this.chart = Morris.Donut(options);\n    }\n  }\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(2);\n\n__webpack_require__(4);\n\nvar _converter = __webpack_require__(0);\n\nvar _converter2 = _interopRequireDefault(_converter);\n\nvar _chartMixins = __webpack_require__(1);\n\nvar _chartMixins2 = _interopRequireDefault(_chartMixins);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'line-chart',\n\n  mixins: [_chartMixins2.default.line],\n\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n\n\n  watch: {\n    data: function data(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.chart.options.labels = _converter2.default.toObject(_this.labels);\n        _this.chart.options.xkey = _this.xkey;\n        _this.chart.options.ykeys = _converter2.default.toObject(_this.ykeys);\n\n        if (_this['lineColors']) {\n          _this.chart.options['lineColors'] = _converter2.default.toObject(_this['lineColors']);\n        }\n\n        _this.chart.setData(_converter2.default.toObject(_this.data));\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var options = {\n      element: this.id,\n      data: _converter2.default.toObject(this.data),\n      resize: _converter2.default.toBoolean(this.resize),\n      labels: _converter2.default.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: _converter2.default.toObject(this.ykeys),\n      grid: _converter2.default.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: _converter2.default.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: _converter2.default.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: _converter2.default.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity\n    };\n\n    this.addOptionAsObject('lineColors', options);\n    this.addOption('xLabels', options);\n    this.addOptionAsObject('pointFillColors', options);\n    this.addOptionAsObject('pointStrokeColors', options);\n    this.addOption('dateFormat', options);\n    this.addOption('xLabelFormat', options);\n    this.addOption('yLabelFormat', options);\n    this.addOptionAsObject('goals', options);\n    this.addOptionAsObject('goalLineColors', options);\n    this.addOptionAsObject('events', options);\n    this.addOptionAsObject('eventLineColors', options);\n    this.addOption('hoverCallback', options);\n\n    this.chart = Morris.Line(options);\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _donutChart = __webpack_require__(7);\n\nvar _donutChart2 = _interopRequireDefault(_donutChart);\n\nvar _barChart = __webpack_require__(6);\n\nvar _barChart2 = _interopRequireDefault(_barChart);\n\nvar _lineChart = __webpack_require__(8);\n\nvar _lineChart2 = _interopRequireDefault(_lineChart);\n\nvar _areaChart = __webpack_require__(5);\n\nvar _areaChart2 = _interopRequireDefault(_areaChart);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VueMorris = {\n  DonutChart: _donutChart2.default, BarChart: _barChart2.default, LineChart: _lineChart2.default, AreaChart: _areaChart2.default\n};\n\nmodule.exports = VueMorris;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(15)();\n// imports\n\n\n// module\nexports.push([module.i, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n/***/ })\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// vue-morris.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 090c88a4d2f9cc71051e","const Converter = {\n  toObject: function (data) {\n    if (typeof data === 'string') {\n      return JSON.parse(data)\n    }\n    return data\n  },\n\n  toBoolean: function (data) {\n    if (typeof data === 'string') {\n      return data === 'true'\n    }\n    return data\n  },\n\n  toInt: function(data) {\n    if (typeof data === 'string') {\n      return parseInt(data)\n    }\n    return data\n  },\n}\n\nmodule.exports = Converter\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/converter.js","import Converter from '../util/converter'\n\n/**\n * All properties used by the charts with their constraints.\n */\nconst Props = {\n  id: { type: String, required: true }, \n  data: { type: [ String, Array ], required: true },\n  barColors: { type: [ String, Array, Function ], required: false },\n  xkey: { type: String, required: false, default: 'key' },\n  ykeys: { type: [ String, Array ], required: false, default: function _default() { return ['value']; }},\n  labels: { type: [ String, Array ], required: false, default: function _default() { return ['Value']; }},\n  hoverCallback: { type: Function, required: false },\n  axes: { type: [ Boolean, String ], required: false, default: true },\n  hideHover: { type: String, required: false },\n  stacked: { type: [ Boolean, String ], required: false },\n  resize: { type: [ Boolean, String ], required: false },\n  horizontal: { type: [ Boolean, String ], required: false, default: false },\n  grid: { type: [ Boolean, String ], required: false, default: true },\n  gridTextColor: { type: String, required: false, default: '#888' },\n  gridTextSize: { type: [ Number, String ], required: false, default: 12 },\n  gridTextFamily: { type: String, required: false, default: 'sans-serif' },\n  gridTextWeight: { type: String, required: false, default: 'normal' },\n\n  colors: { type: [ String, Array ], required: false },\n  formatter: { type: Function, required: false },\n\n  lineColors: { type: [ String, Array, Function ], required: false },\n  xLabels: { type: String, required: false },\n  lineWidth: { type: [ Number, String ], required: false },\n  pointSize: { type: [ Number, String ], required: false },\n  pointFillColors: { type: [ String, Array ], required: false },\n  pointStrokeColors: {  type: [ String, Array ], required: false },\n  ymax: { type: String, required: false }, \n  ymin: { type: String, required: false },\n  smooth: { type: [ Boolean, String ], required: false, default: true },\n  parseTime: { type: [ Boolean, String ], required: false, default: true },\n  postUnits: { type: String, required: false },\n  preUnits: { type: String, required: false },\n  dateFormat: { type: Function, required: false },\n  xLabelFormat: { type: Function, required: false },\n  yLabelFormat: { type: Function, required: false },\n  xLabelAngle: { type: String, required: false },\n  goals: { type: [ String, Array ], required: false },\n  goalStrokeWidth: { type: [ Number, String ], required: false },\n  goalLineColors: { type: [ String, Array ], required: false },\n  events: { type: [ String, Array ], required: false },\n  eventStrokeWidth: { type: String, required: false },\n  eventLineColors: { type: [ String, Array ], required: false },\n  fillOpacity: { type: String, required: false },\n\n  behaveLikeLine: { type: [ Boolean, String ], required: false, default: false }\n}\n\n/**\n * Properties of a bar chart.\n */\nconst BarProps = {\n  id: Props.id,\n  data: Props.data,\n  barColors: Props.barColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  hoverCallback: Props.hoverCallback,\n  grid: Props.grid,\n  horizontal: Props.horizontal,\n  axes: Props.axes,\n  hideHover: Props.hideHover,\n  stacked: Props.stacked,\n  resize: Props.resize,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight\n}\n\n/**\n * Properties of a donut chart.\n */\nconst DonutProps = {\n  id: Props.id, \n  data: Props.data,\n  colors: Props.colors,\n  formatter: Props.formatter,\n  resize: Props.resize\n}\n\n/**\n * Properties of a line chart.\n */\nconst LineProps = {\n  id: Props.id, \n  data: Props.data,\n  resize: Props.resize,\n  lineColors: Props.lineColors,\n  xkey: Props.xkey,\n  ykeys: Props.ykeys,\n  labels: Props.labels,\n  xLabels: Props.xLabels,\n  grid: Props.grid,\n  gridTextColor: Props.gridTextColor,\n  gridTextSize: Props.gridTextSize,\n  gridTextFamily: Props.gridTextFamily,\n  gridTextWeight: Props.gridTextWeight,\n  lineWidth: Props.lineWidth,\n  pointSize: Props.pointSize,\n  pointFillColors: Props.pointFillColors,\n  pointStrokeColors: Props.pointStrokeColors,\n  ymax: Props.ymax,\n  ymin: Props.ymin,\n  smooth: Props.smooth,\n  hideHover: Props.hideHover,\n  parseTime: Props.parseTime,\n  postUnits: Props.postUnits,\n  preUnits: Props.preUnits,\n  dateFormat: Props.dateFormat,\n  xLabelFormat: Props.xLabelFormat,\n  yLabelFormat: Props.yLabelFormat,\n  xLabelAngle: Props.xLabelAngle,\n  goals: Props.goals,\n  goalStrokeWidth: Props.goalStrokeWidth,\n  goalLineColors: Props.goalLineColors,\n  events: Props.events,\n  eventStrokeWidth: Props.eventStrokeWidth,\n  eventLineColors: Props.eventLineColors,\n  fillOpacity: Props.fillOpacity,\n  hoverCallback: Props.hoverCallback\n}\n\n/**\n * Properties of an area chart.\n */\nconst AreaProps = {\n  behaveLikeLine: Props.behaveLikeLine\n}\n\nfor (var prop in LineProps) {\n    if (LineProps.hasOwnProperty(prop)) {\n        AreaProps[prop] = LineProps[prop];\n    }\n}\n\n/**\n * Common methods for all the charts.\n */\nconst ChartMethods = {\n  addOption (name, options) {\n    if (this[name]) {\n      options[name] = this[name]\n    }\n  },\n\n  addOptionAsObject (name, options) {\n    if (this[name]) {\n      options[name] = Converter.toObject(this[name])\n    }\n  }\n}\n\nexport default {\n  bar: {\n    props: BarProps,\n    methods: ChartMethods\n  },\n\n  donut: {\n    props: DonutProps,\n    methods: ChartMethods\n  },\n\n  line: {\n    props: LineProps,\n    methods: ChartMethods\n  },\n\n  area: {\n    props: AreaProps,\n    methods: ChartMethods\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chart-mixins.js","/* @license\nmorris.js v0.5.1\nCopyright 2014 Olly Smith All rights reserved.\nLicensed under the BSD-2-Clause License.\n*/\n\n\n(function() {\n  var $, Morris, minutesSpecHelper, secondsSpecHelper,\n    __slice = [].slice,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  Morris = window.Morris = {};\n\n  $ = jQuery;\n\n  Morris.EventEmitter = (function() {\n    function EventEmitter() {}\n\n    EventEmitter.prototype.on = function(name, handler) {\n      if (this.handlers == null) {\n        this.handlers = {};\n      }\n      if (this.handlers[name] == null) {\n        this.handlers[name] = [];\n      }\n      this.handlers[name].push(handler);\n      return this;\n    };\n\n    EventEmitter.prototype.fire = function() {\n      var args, handler, name, _i, _len, _ref, _results;\n      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if ((this.handlers != null) && (this.handlers[name] != null)) {\n        _ref = this.handlers[name];\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          handler = _ref[_i];\n          _results.push(handler.apply(null, args));\n        }\n        return _results;\n      }\n    };\n\n    return EventEmitter;\n\n  })();\n\n  Morris.commas = function(num) {\n    var absnum, intnum, ret, strabsnum;\n    if (num != null) {\n      ret = num < 0 ? \"-\" : \"\";\n      absnum = Math.abs(num);\n      intnum = Math.floor(absnum).toFixed(0);\n      ret += intnum.replace(/(?=(?:\\d{3})+$)(?!^)/g, ',');\n      strabsnum = absnum.toString();\n      if (strabsnum.length > intnum.length) {\n        ret += strabsnum.slice(intnum.length);\n      }\n      return ret;\n    } else {\n      return '-';\n    }\n  };\n\n  Morris.pad2 = function(number) {\n    return (number < 10 ? '0' : '') + number;\n  };\n\n  Morris.Grid = (function(_super) {\n    __extends(Grid, _super);\n\n    function Grid(options) {\n      this.hasToShow = __bind(this.hasToShow, this);\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      var _this = this;\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if ((this.el == null) || this.el.length === 0) {\n        throw new Error(\"Graph container element not found\");\n      }\n      if (this.el.css('position') === 'static') {\n        this.el.css('position', 'relative');\n      }\n      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\n      if (typeof this.options.units === 'string') {\n        this.options.postUnits = options.units;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      this.elementWidth = null;\n      this.elementHeight = null;\n      this.dirty = false;\n      this.selectFrom = null;\n      if (this.init) {\n        this.init();\n      }\n      this.setData(this.options.data);\n      this.el.bind('mousemove', function(evt) {\n        var left, offset, right, width, x;\n        offset = _this.el.offset();\n        x = evt.pageX - offset.left;\n        if (_this.selectFrom) {\n          left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\n          right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\n          width = right - left;\n          return _this.selectionRect.attr({\n            x: left,\n            width: width\n          });\n        } else {\n          return _this.fire('hovermove', x, evt.pageY - offset.top);\n        }\n      });\n      this.el.bind('mouseleave', function(evt) {\n        if (_this.selectFrom) {\n          _this.selectionRect.hide();\n          _this.selectFrom = null;\n        }\n        return _this.fire('hoverout');\n      });\n      this.el.bind('touchstart touchmove touchend', function(evt) {\n        var offset, touch;\n        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\n        offset = _this.el.offset();\n        return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\n      });\n      this.el.bind('click', function(evt) {\n        var offset;\n        offset = _this.el.offset();\n        return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\n      });\n      if (this.options.rangeSelect) {\n        this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\n          fill: this.options.rangeSelectColor,\n          stroke: false\n        }).toBack().hide();\n        this.el.bind('mousedown', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          return _this.startRange(evt.pageX - offset.left);\n        });\n        this.el.bind('mouseup', function(evt) {\n          var offset;\n          offset = _this.el.offset();\n          _this.endRange(evt.pageX - offset.left);\n          return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\n        });\n      }\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\n      if (this.postInit) {\n        this.postInit();\n      }\n    }\n\n    Grid.prototype.gridDefaults = {\n      dateFormat: null,\n      axes: true,\n      grid: true,\n      gridLineColor: '#aaa',\n      gridStrokeWidth: 0.5,\n      gridTextColor: '#888',\n      gridTextSize: 12,\n      gridTextFamily: 'sans-serif',\n      gridTextWeight: 'normal',\n      hideHover: false,\n      yLabelFormat: null,\n      xLabelAngle: 0,\n      numLines: 5,\n      padding: 25,\n      parseTime: true,\n      postUnits: '',\n      preUnits: '',\n      ymax: 'auto',\n      ymin: 'auto 0',\n      goals: [],\n      goalStrokeWidth: 1.0,\n      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\n      events: [],\n      eventStrokeWidth: 1.0,\n      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\n      rangeSelect: null,\n      rangeSelectColor: '#eef',\n      resize: false\n    };\n\n    Grid.prototype.setData = function(data, redraw) {\n      var e, flatEvents, from, idx, index, maxGoal, minGoal, ret, row, step, to, total, y, ykey, ymax, ymin, yval, _i, _len, _ref, _ref1;\n      if (redraw == null) {\n        redraw = true;\n      }\n      this.options.data = data;\n      if ((data == null) || data.length === 0) {\n        this.data = [];\n        this.raphael.clear();\n        if (this.hover != null) {\n          this.hover.hide();\n        }\n        return;\n      }\n      ymax = this.cumulative ? 0 : null;\n      ymin = this.cumulative ? 0 : null;\n      if (this.options.goals.length > 0) {\n        minGoal = Math.min.apply(Math, this.options.goals);\n        maxGoal = Math.max.apply(Math, this.options.goals);\n        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\n        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\n      }\n      this.data = (function() {\n        var _i, _len, _results;\n        _results = [];\n        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\n          row = data[index];\n          ret = {\n            src: row\n          };\n          ret.label = row[this.options.xkey];\n          if (this.options.parseTime) {\n            ret.x = Morris.parseDate(ret.label);\n            if (this.options.dateFormat) {\n              ret.label = this.options.dateFormat(ret.x);\n            } else if (typeof ret.label === 'number') {\n              ret.label = new Date(ret.label).toString();\n            }\n          } else {\n            ret.x = index;\n            if (this.options.xLabelFormat) {\n              ret.label = this.options.xLabelFormat(ret);\n            }\n          }\n          total = 0;\n          ret.y = (function() {\n            var _j, _len1, _ref, _results1;\n            _ref = this.options.ykeys;\n            _results1 = [];\n            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\n              ykey = _ref[idx];\n              yval = row[ykey];\n              if (typeof yval === 'string') {\n                yval = parseFloat(yval);\n              }\n              if ((yval != null) && typeof yval !== 'number') {\n                yval = null;\n              }\n              if ((yval != null) && this.hasToShow(idx)) {\n                if (this.cumulative) {\n                  total += yval;\n                } else {\n                  if (ymax != null) {\n                    ymax = Math.max(yval, ymax);\n                    ymin = Math.min(yval, ymin);\n                  } else {\n                    ymax = ymin = yval;\n                  }\n                }\n              }\n              if (this.cumulative && (total != null)) {\n                ymax = Math.max(total, ymax);\n                ymin = Math.min(total, ymin);\n              }\n              _results1.push(yval);\n            }\n            return _results1;\n          }).call(this);\n          _results.push(ret);\n        }\n        return _results;\n      }).call(this);\n      if (this.options.parseTime) {\n        this.data = this.data.sort(function(a, b) {\n          return (a.x > b.x) - (b.x > a.x);\n        });\n      }\n      this.xmin = this.data[0].x;\n      this.xmax = this.data[this.data.length - 1].x;\n      this.events = [];\n      if (this.options.events.length > 0) {\n        if (this.options.parseTime) {\n          _ref = this.options.events;\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            e = _ref[_i];\n            if (e instanceof Array) {\n              from = e[0], to = e[1];\n              this.events.push([Morris.parseDate(from), Morris.parseDate(to)]);\n            } else {\n              this.events.push(Morris.parseDate(e));\n            }\n          }\n        } else {\n          this.events = this.options.events;\n        }\n        flatEvents = $.map(this.events, function(e) {\n          return e;\n        });\n        this.xmax = Math.max(this.xmax, Math.max.apply(Math, flatEvents));\n        this.xmin = Math.min(this.xmin, Math.min.apply(Math, flatEvents));\n      }\n      if (this.xmin === this.xmax) {\n        this.xmin -= 1;\n        this.xmax += 1;\n      }\n      this.ymin = this.yboundary('min', ymin);\n      this.ymax = this.yboundary('max', ymax);\n      if (this.ymin === this.ymax) {\n        if (ymin) {\n          this.ymin -= 1;\n        }\n        this.ymax += 1;\n      }\n      if (((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'y') || this.options.grid === true) {\n        if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\n          this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\n          this.ymin = Math.min(this.ymin, this.grid[0]);\n          this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\n        } else {\n          step = (this.ymax - this.ymin) / (this.options.numLines - 1);\n          this.grid = (function() {\n            var _j, _ref2, _ref3, _results;\n            _results = [];\n            for (y = _j = _ref2 = this.ymin, _ref3 = this.ymax; step > 0 ? _j <= _ref3 : _j >= _ref3; y = _j += step) {\n              _results.push(y);\n            }\n            return _results;\n          }).call(this);\n        }\n      }\n      this.dirty = true;\n      if (redraw) {\n        return this.redraw();\n      }\n    };\n\n    Grid.prototype.yboundary = function(boundaryType, currentValue) {\n      var boundaryOption, suggestedValue;\n      boundaryOption = this.options[\"y\" + boundaryType];\n      if (typeof boundaryOption === 'string') {\n        if (boundaryOption.slice(0, 4) === 'auto') {\n          if (boundaryOption.length > 5) {\n            suggestedValue = parseInt(boundaryOption.slice(5), 10);\n            if (currentValue == null) {\n              return suggestedValue;\n            }\n            return Math[boundaryType](currentValue, suggestedValue);\n          } else {\n            if (currentValue != null) {\n              return currentValue;\n            } else {\n              return 0;\n            }\n          }\n        } else {\n          return parseInt(boundaryOption, 10);\n        }\n      } else {\n        return boundaryOption;\n      }\n    };\n\n    Grid.prototype.autoGridLines = function(ymin, ymax, nlines) {\n      var gmax, gmin, grid, smag, span, step, unit, y, ymag;\n      span = ymax - ymin;\n      ymag = Math.floor(Math.log(span) / Math.log(10));\n      unit = Math.pow(10, ymag);\n      gmin = Math.floor(ymin / unit) * unit;\n      gmax = Math.ceil(ymax / unit) * unit;\n      step = (gmax - gmin) / (nlines - 1);\n      if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\n        step = Math.ceil(step);\n        gmax = gmin + step * (nlines - 1);\n      }\n      if (gmin < 0 && gmax > 0) {\n        gmin = Math.floor(ymin / step) * step;\n        gmax = Math.ceil(ymax / step) * step;\n      }\n      if (step < 1) {\n        smag = Math.floor(Math.log(step) / Math.log(10));\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(parseFloat(y.toFixed(1 - smag)));\n          }\n          return _results;\n        })();\n      } else {\n        grid = (function() {\n          var _i, _results;\n          _results = [];\n          for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\n            _results.push(y);\n          }\n          return _results;\n        })();\n      }\n      return grid;\n    };\n\n    Grid.prototype._calc = function() {\n      var angle, bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\n      w = this.el.width();\n      h = this.el.height();\n      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\n        this.elementWidth = w;\n        this.elementHeight = h;\n        this.dirty = false;\n        this.left = this.options.padding;\n        this.right = this.elementWidth - this.options.padding;\n        this.top = this.options.padding;\n        this.bottom = this.elementHeight - this.options.padding;\n        if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\n          yLabelWidths = (function() {\n            var _i, _len, _ref1, _results;\n            _ref1 = this.grid;\n            _results = [];\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              gridLine = _ref1[_i];\n              _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.left += Math.max.apply(Math, yLabelWidths);\n          } else {\n            this.bottom -= Math.max.apply(Math, yLabelWidths);\n          }\n        }\n        if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\n          if (!this.options.horizontal) {\n            angle = -this.options.xLabelAngle;\n          } else {\n            angle = -90;\n          }\n          bottomOffsets = (function() {\n            var _i, _ref2, _results;\n            _results = [];\n            for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\n              _results.push(this.measureText(this.data[i].label, angle).height);\n            }\n            return _results;\n          }).call(this);\n          if (!this.options.horizontal) {\n            this.bottom -= Math.max.apply(Math, bottomOffsets);\n          } else {\n            this.left += Math.max.apply(Math, bottomOffsets);\n          }\n        }\n        this.width = Math.max(1, this.right - this.left);\n        this.height = Math.max(1, this.bottom - this.top);\n        if (!this.options.horizontal) {\n          this.dx = this.width / (this.xmax - this.xmin);\n          this.dy = this.height / (this.ymax - this.ymin);\n          this.yStart = this.bottom;\n          this.yEnd = this.top;\n          this.xStart = this.left;\n          this.xEnd = this.right;\n          this.xSize = this.width;\n          this.ySize = this.height;\n        } else {\n          this.dx = this.height / (this.xmax - this.xmin);\n          this.dy = this.width / (this.ymax - this.ymin);\n          this.yStart = this.left;\n          this.yEnd = this.right;\n          this.xStart = this.top;\n          this.xEnd = this.bottom;\n          this.xSize = this.height;\n          this.ySize = this.width;\n        }\n        if (this.calc) {\n          return this.calc();\n        }\n      }\n    };\n\n    Grid.prototype.transY = function(y) {\n      if (!this.options.horizontal) {\n        return this.bottom - (y - this.ymin) * this.dy;\n      } else {\n        return this.left + (y - this.ymin) * this.dy;\n      }\n    };\n\n    Grid.prototype.transX = function(x) {\n      if (this.data.length === 1) {\n        return (this.xStart + this.xEnd) / 2;\n      } else {\n        return this.xStart + (x - this.xmin) * this.dx;\n      }\n    };\n\n    Grid.prototype.redraw = function() {\n      this.raphael.clear();\n      this._calc();\n      this.drawGrid();\n      this.drawGoals();\n      this.drawEvents();\n      if (this.draw) {\n        return this.draw();\n      }\n    };\n\n    Grid.prototype.measureText = function(text, angle) {\n      var ret, tt;\n      if (angle == null) {\n        angle = 0;\n      }\n      tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\n      ret = tt.getBBox();\n      tt.remove();\n      return ret;\n    };\n\n    Grid.prototype.yAxisFormat = function(label) {\n      return this.yLabelFormat(label, 0);\n    };\n\n    Grid.prototype.yLabelFormat = function(label, i) {\n      if (typeof this.options.yLabelFormat === 'function') {\n        return this.options.yLabelFormat(label, i);\n      } else {\n        return \"\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\n      }\n    };\n\n    Grid.prototype.getYAxisLabelX = function() {\n      return this.left - this.options.padding / 2;\n    };\n\n    Grid.prototype.drawGrid = function() {\n      var basePos, lineY, pos, _i, _len, _ref, _ref1, _ref2, _results;\n      if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\n        return;\n      }\n      if (!this.options.horizontal) {\n        basePos = this.getYAxisLabelX();\n      } else {\n        basePos = this.getXAxisLabelY();\n      }\n      _ref1 = this.grid;\n      _results = [];\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        lineY = _ref1[_i];\n        pos = this.transY(lineY);\n        if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\n          if (!this.options.horizontal) {\n            this.drawYAxisLabel(basePos, pos, this.yAxisFormat(lineY));\n          } else {\n            this.drawXAxisLabel(pos, basePos, this.yAxisFormat(lineY));\n          }\n        }\n        if (this.options.grid) {\n          pos = Math.floor(pos) + 0.5;\n          if (!this.options.horizontal) {\n            _results.push(this.drawGridLine(\"M\" + this.xStart + \",\" + pos + \"H\" + this.xEnd));\n          } else {\n            _results.push(this.drawGridLine(\"M\" + pos + \",\" + this.xStart + \"V\" + this.xEnd));\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoals = function() {\n      var color, goal, i, _i, _len, _ref, _results;\n      _ref = this.options.goals;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        goal = _ref[i];\n        color = this.options.goalLineColors[i % this.options.goalLineColors.length];\n        _results.push(this.drawGoal(goal, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawEvents = function() {\n      var color, event, i, _i, _len, _ref, _results;\n      _ref = this.events;\n      _results = [];\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        event = _ref[i];\n        color = this.options.eventLineColors[i % this.options.eventLineColors.length];\n        _results.push(this.drawEvent(event, color));\n      }\n      return _results;\n    };\n\n    Grid.prototype.drawGoal = function(goal, color) {\n      var path, y;\n      y = Math.floor(this.transY(goal)) + 0.5;\n      if (!this.options.horizontal) {\n        path = \"M\" + this.xStart + \",\" + y + \"H\" + this.xEnd;\n      } else {\n        path = \"M\" + y + \",\" + this.xStart + \"V\" + this.xEnd;\n      }\n      return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\n    };\n\n    Grid.prototype.drawEvent = function(event, color) {\n      var from, path, to, x;\n      if (event instanceof Array) {\n        from = event[0], to = event[1];\n        from = Math.floor(this.transX(from)) + 0.5;\n        to = Math.floor(this.transX(to)) + 0.5;\n        if (!this.options.horizontal) {\n          return this.raphael.rect(from, this.yEnd, to - from, this.yStart - this.yEnd).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        } else {\n          return this.raphael.rect(this.yStart, from, this.yEnd - this.yStart, to - from).attr({\n            fill: color,\n            stroke: false\n          }).toBack();\n        }\n      } else {\n        x = Math.floor(this.transX(event)) + 0.5;\n        if (!this.options.horizontal) {\n          path = \"M\" + x + \",\" + this.yStart + \"V\" + this.yEnd;\n        } else {\n          path = \"M\" + this.yStart + \",\" + x + \"H\" + this.yEnd;\n        }\n        return this.raphael.path(path).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\n      }\n    };\n\n    Grid.prototype.drawYAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\n    };\n\n    Grid.prototype.drawGridLine = function(path) {\n      return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\n    };\n\n    Grid.prototype.startRange = function(x) {\n      this.hover.hide();\n      this.selectFrom = x;\n      return this.selectionRect.attr({\n        x: x,\n        width: 0\n      }).show();\n    };\n\n    Grid.prototype.endRange = function(x) {\n      var end, start;\n      if (this.selectFrom) {\n        start = Math.min(this.selectFrom, x);\n        end = Math.max(this.selectFrom, x);\n        this.options.rangeSelect.call(this.el, {\n          start: this.data[this.hitTest(start)].x,\n          end: this.data[this.hitTest(end)].x\n        });\n        return this.selectFrom = null;\n      }\n    };\n\n    Grid.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    Grid.prototype.hasToShow = function(i) {\n      return this.options.shown === true || this.options.shown[i] === true;\n    };\n\n    return Grid;\n\n  })(Morris.EventEmitter);\n\n  Morris.parseDate = function(date) {\n    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\n    if (typeof date === 'number') {\n      return date;\n    }\n    m = date.match(/^(\\d+) Q(\\d)$/);\n    n = date.match(/^(\\d+)-(\\d+)$/);\n    o = date.match(/^(\\d+)-(\\d+)-(\\d+)$/);\n    p = date.match(/^(\\d+) W(\\d+)$/);\n    q = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    r = date.match(/^(\\d+)-(\\d+)-(\\d+)[ T](\\d+):(\\d+):(\\d+(\\.\\d+)?)(Z|([+-])(\\d\\d):?(\\d\\d))?$/);\n    if (m) {\n      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\n    } else if (n) {\n      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\n    } else if (o) {\n      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\n    } else if (p) {\n      ret = new Date(parseInt(p[1], 10), 0, 1);\n      if (ret.getDay() !== 4) {\n        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\n      }\n      return ret.getTime() + parseInt(p[2], 10) * 604800000;\n    } else if (q) {\n      if (!q[6]) {\n        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\n      } else {\n        offsetmins = 0;\n        if (q[6] !== 'Z') {\n          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\n          if (q[7] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\n      }\n    } else if (r) {\n      secs = parseFloat(r[6]);\n      isecs = Math.floor(secs);\n      msecs = Math.round((secs - isecs) * 1000);\n      if (!r[8]) {\n        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\n      } else {\n        offsetmins = 0;\n        if (r[8] !== 'Z') {\n          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\n          if (r[9] === '+') {\n            offsetmins = 0 - offsetmins;\n          }\n        }\n        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\n      }\n    } else {\n      return new Date(parseInt(date, 10), 0, 1).getTime();\n    }\n  };\n\n  Morris.Hover = (function() {\n    Hover.defaults = {\n      \"class\": 'morris-hover morris-default-style'\n    };\n\n    function Hover(options) {\n      if (options == null) {\n        options = {};\n      }\n      this.options = $.extend({}, Morris.Hover.defaults, options);\n      this.el = $(\"<div class='\" + this.options[\"class\"] + \"'></div>\");\n      this.el.hide();\n      this.options.parent.append(this.el);\n    }\n\n    Hover.prototype.update = function(html, x, y, centre_y) {\n      if (!html) {\n        return this.hide();\n      } else {\n        this.html(html);\n        this.show();\n        return this.moveTo(x, y, centre_y);\n      }\n    };\n\n    Hover.prototype.html = function(content) {\n      return this.el.html(content);\n    };\n\n    Hover.prototype.moveTo = function(x, y, centre_y) {\n      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\n      parentWidth = this.options.parent.innerWidth();\n      parentHeight = this.options.parent.innerHeight();\n      hoverWidth = this.el.outerWidth();\n      hoverHeight = this.el.outerHeight();\n      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\n      if (y != null) {\n        if (centre_y === true) {\n          top = y - hoverHeight / 2;\n          if (top < 0) {\n            top = 0;\n          }\n        } else {\n          top = y - hoverHeight - 10;\n          if (top < 0) {\n            top = y + 10;\n            if (top + hoverHeight > parentHeight) {\n              top = parentHeight / 2 - hoverHeight / 2;\n            }\n          }\n        }\n      } else {\n        top = parentHeight / 2 - hoverHeight / 2;\n      }\n      return this.el.css({\n        left: left + \"px\",\n        top: parseInt(top) + \"px\"\n      });\n    };\n\n    Hover.prototype.show = function() {\n      return this.el.show();\n    };\n\n    Hover.prototype.hide = function() {\n      return this.el.hide();\n    };\n\n    return Hover;\n\n  })();\n\n  Morris.Line = (function(_super) {\n    __extends(Line, _super);\n\n    function Line(options) {\n      this.hilight = __bind(this.hilight, this);\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Line)) {\n        return new Morris.Line(options);\n      }\n      Line.__super__.constructor.call(this, options);\n    }\n\n    Line.prototype.init = function() {\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Line.prototype.defaults = {\n      lineWidth: 3,\n      pointSize: 4,\n      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      pointStrokeWidths: [1],\n      pointStrokeColors: ['#ffffff'],\n      pointFillColors: [],\n      smooth: true,\n      shown: true,\n      xLabels: 'auto',\n      xLabelFormat: null,\n      xLabelMargin: 24,\n      hideHover: false,\n      trendLine: false,\n      trendLineWidth: 2,\n      trendLineColors: ['#689bc3', '#a2b3bf', '#64b764']\n    };\n\n    Line.prototype.calc = function() {\n      this.calcPoints();\n      return this.generatePaths();\n    };\n\n    Line.prototype.calcPoints = function() {\n      var row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row._y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(y);\n            }\n          }\n          return _results1;\n        })())));\n      }\n      return _results;\n    };\n\n    Line.prototype.hitTest = function(x) {\n      var index, r, _i, _len, _ref;\n      if (this.data.length === 0) {\n        return null;\n      }\n      _ref = this.data.slice(1);\n      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n        r = _ref[index];\n        if (x < (r._x + this.data[index]._x) / 2) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    Line.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Line.prototype.onHoverMove = function(x, y) {\n      var index;\n      index = this.hitTest(x);\n      return this.displayHoverForRow(index);\n    };\n\n    Line.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.displayHoverForRow(null);\n      }\n    };\n\n    Line.prototype.displayHoverForRow = function(index) {\n      var _ref;\n      if (index != null) {\n        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n        return this.hilight(index);\n      } else {\n        this.hover.hide();\n        return this.hilight();\n      }\n    };\n\n    Line.prototype.hoverContentForRow = function(index) {\n      var content, j, row, y, _i, _len, _ref;\n      row = this.data[index];\n      content = $(\"<div class='morris-hover-row-label'>\").text(row.label);\n      content = content.prop('outerHTML');\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      return [content, row._x, row._ymax];\n    };\n\n    Line.prototype.generatePaths = function() {\n      var coords, i, r, smooth;\n      return this.paths = (function() {\n        var _i, _ref, _ref1, _results;\n        _results = [];\n        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          smooth = typeof this.options.smooth === \"boolean\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\n          coords = (function() {\n            var _j, _len, _ref2, _results1;\n            _ref2 = this.data;\n            _results1 = [];\n            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\n              r = _ref2[_j];\n              if (r._y[i] !== void 0) {\n                _results1.push({\n                  x: r._x,\n                  y: r._y[i]\n                });\n              }\n            }\n            return _results1;\n          }).call(this);\n          if (coords.length > 1) {\n            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\n          } else {\n            _results.push(null);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Line.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      this.drawSeries();\n      if (this.options.hideHover === false) {\n        return this.displayHoverForRow(this.data.length - 1);\n      }\n    };\n\n    Line.prototype.drawXAxis = function() {\n      var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\n        _this = this;\n      ypos = this.bottom + this.options.padding / 2;\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      drawLabel = function(labelText, xpos) {\n        var label, labelBox, margin, offset, textBox;\n        label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-_this.options.xLabelAngle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (_this.options.xLabelAngle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        labelBox = label.getBBox();\n        if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\n          if (_this.options.xLabelAngle !== 0) {\n            margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\n            prevAngleMargin = labelBox.x - margin;\n          }\n          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\n        } else {\n          return label.remove();\n        }\n      };\n      if (this.options.parseTime) {\n        if (this.data.length === 1 && this.options.xLabels === 'auto') {\n          labels = [[this.data[0].label, this.data[0].x]];\n        } else {\n          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\n        }\n      } else {\n        labels = (function() {\n          var _i, _len, _ref, _results;\n          _ref = this.data;\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            row = _ref[_i];\n            _results.push([row.label, row.x]);\n          }\n          return _results;\n        }).call(this);\n      }\n      labels.reverse();\n      _results = [];\n      for (_i = 0, _len = labels.length; _i < _len; _i++) {\n        l = labels[_i];\n        _results.push(drawLabel(l[0], l[1]));\n      }\n      return _results;\n    };\n\n    Line.prototype.drawSeries = function() {\n      var i, _i, _j, _ref, _ref1, _results;\n      this.seriesPoints = [];\n      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\n        if (this.hasToShow(i)) {\n          if (this.options.trendLine !== false && this.options.trendLine === true || this.options.trendLine[i] === true) {\n            this._drawTrendLine(i);\n          }\n          this._drawLineFor(i);\n        }\n      }\n      _results = [];\n      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\n        if (this.hasToShow(i)) {\n          _results.push(this._drawPointFor(i));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype._drawPointFor = function(index) {\n      var circle, row, _i, _len, _ref, _results;\n      this.seriesPoints[index] = [];\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        circle = null;\n        if (row._y[index] != null) {\n          circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\n        }\n        _results.push(this.seriesPoints[index].push(circle));\n      }\n      return _results;\n    };\n\n    Line.prototype._drawLineFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\n      }\n    };\n\n    Line.prototype._drawTrendLine = function(index) {\n      var a, b, data, datapoints, path, sum_x, sum_xx, sum_xy, sum_y, val, x, y, _i, _len, _ref;\n      sum_x = 0;\n      sum_y = 0;\n      sum_xx = 0;\n      sum_xy = 0;\n      datapoints = 0;\n      _ref = this.data;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        val = _ref[_i];\n        x = val.x;\n        y = val.y[index];\n        if (y === void 0) {\n          continue;\n        }\n        datapoints += 1;\n        sum_x += x;\n        sum_y += y;\n        sum_xx += x * x;\n        sum_xy += x * y;\n      }\n      a = (datapoints * sum_xy - sum_x * sum_y) / (datapoints * sum_xx - sum_x * sum_x);\n      b = (sum_y / datapoints) - ((a * sum_x) / datapoints);\n      data = [{}, {}];\n      data[0].x = this.transX(this.data[0].x);\n      data[0].y = this.transY(this.data[0].x * a + b);\n      data[1].x = this.transX(this.data[this.data.length - 1].x);\n      data[1].y = this.transY(this.data[this.data.length - 1].x * a + b);\n      path = Morris.Line.createPath(data, false, this.bottom);\n      return path = this.raphael.path(path).attr('stroke', this.colorFor(null, index, 'trendLine')).attr('stroke-width', this.options.trendLineWidth);\n    };\n\n    Line.createPath = function(coords, smooth, bottom) {\n      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\n      path = \"\";\n      if (smooth) {\n        grads = Morris.Line.gradients(coords);\n      }\n      prevCoord = {\n        y: null\n      };\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          if (prevCoord.y != null) {\n            if (smooth) {\n              g = grads[i];\n              lg = grads[i - 1];\n              ix = (coord.x - prevCoord.x) / 4;\n              x1 = prevCoord.x + ix;\n              y1 = Math.min(bottom, prevCoord.y + ix * lg);\n              x2 = coord.x - ix;\n              y2 = Math.min(bottom, coord.y - ix * g);\n              path += \"C\" + x1 + \",\" + y1 + \",\" + x2 + \",\" + y2 + \",\" + coord.x + \",\" + coord.y;\n            } else {\n              path += \"L\" + coord.x + \",\" + coord.y;\n            }\n          } else {\n            if (!smooth || (grads[i] != null)) {\n              path += \"M\" + coord.x + \",\" + coord.y;\n            }\n          }\n        }\n        prevCoord = coord;\n      }\n      return path;\n    };\n\n    Line.gradients = function(coords) {\n      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\n      grad = function(a, b) {\n        return (a.y - b.y) / (a.x - b.x);\n      };\n      _results = [];\n      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\n        coord = coords[i];\n        if (coord.y != null) {\n          nextCoord = coords[i + 1] || {\n            y: null\n          };\n          prevCoord = coords[i - 1] || {\n            y: null\n          };\n          if ((prevCoord.y != null) && (nextCoord.y != null)) {\n            _results.push(grad(prevCoord, nextCoord));\n          } else if (prevCoord.y != null) {\n            _results.push(grad(prevCoord, coord));\n          } else if (nextCoord.y != null) {\n            _results.push(grad(coord, nextCoord));\n          } else {\n            _results.push(null);\n          }\n        } else {\n          _results.push(null);\n        }\n      }\n      return _results;\n    };\n\n    Line.prototype.hilight = function(index) {\n      var i, _i, _j, _ref, _ref1;\n      if (this.prevHilight !== null && this.prevHilight !== index) {\n        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.seriesPoints[i][this.prevHilight]) {\n            this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\n          }\n        }\n      }\n      if (index !== null && this.prevHilight !== index) {\n        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n          if (this.seriesPoints[i][index]) {\n            this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\n          }\n        }\n      }\n      return this.prevHilight = index;\n    };\n\n    Line.prototype.colorFor = function(row, sidx, type) {\n      if (typeof this.options.lineColors === 'function') {\n        return this.options.lineColors.call(this, row, sidx, type);\n      } else if (type === 'point') {\n        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\n      } else if (type === 'line') {\n        return this.options.lineColors[sidx % this.options.lineColors.length];\n      } else {\n        return this.options.trendLineColors[sidx % this.options.trendLineColors.length];\n      }\n    };\n\n    Line.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Line.prototype.drawLinePath = function(path, lineColor, lineIndex) {\n      return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\n    };\n\n    Line.prototype.drawLinePoint = function(xPos, yPos, pointColor, lineIndex) {\n      return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\n    };\n\n    Line.prototype.pointStrokeWidthForSeries = function(index) {\n      return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\n    };\n\n    Line.prototype.pointStrokeColorForSeries = function(index) {\n      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\n    };\n\n    Line.prototype.lineWidthForSeries = function(index) {\n      if (this.options.lineWidth instanceof Array) {\n        return this.options.lineWidth[index % this.options.lineWidth.length];\n      } else {\n        return this.options.lineWidth;\n      }\n    };\n\n    Line.prototype.pointSizeForSeries = function(index) {\n      if (this.options.pointSize instanceof Array) {\n        return this.options.pointSize[index % this.options.pointSize.length];\n      } else {\n        return this.options.pointSize;\n      }\n    };\n\n    Line.prototype.pointGrowSeries = function(index) {\n      if (this.pointSizeForSeries(index) === 0) {\n        return;\n      }\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index) + 3\n      }, 25, 'linear');\n    };\n\n    Line.prototype.pointShrinkSeries = function(index) {\n      return Raphael.animation({\n        r: this.pointSizeForSeries(index)\n      }, 25, 'linear');\n    };\n\n    return Line;\n\n  })(Morris.Grid);\n\n  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {\n    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\n    ddensity = 200 * (dmax - dmin) / pxwidth;\n    d0 = new Date(dmin);\n    spec = Morris.LABEL_SPECS[specName];\n    if (spec === void 0) {\n      _ref = Morris.AUTO_LABEL_ORDER;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        name = _ref[_i];\n        s = Morris.LABEL_SPECS[name];\n        if (ddensity >= s.span) {\n          spec = s;\n          break;\n        }\n      }\n    }\n    if (spec === void 0) {\n      spec = Morris.LABEL_SPECS[\"second\"];\n    }\n    if (xLabelFormat) {\n      spec = $.extend({}, spec, {\n        fmt: xLabelFormat\n      });\n    }\n    d = spec.start(d0);\n    ret = [];\n    while ((t = d.getTime()) <= dmax) {\n      if (t >= dmin) {\n        ret.push([spec.fmt(d), t]);\n      }\n      spec.incr(d);\n    }\n    return ret;\n  };\n\n  minutesSpecHelper = function(interval) {\n    return {\n      span: interval * 60 * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes()));\n      },\n      incr: function(d) {\n        return d.setUTCMinutes(d.getUTCMinutes() + interval);\n      }\n    };\n  };\n\n  secondsSpecHelper = function(interval) {\n    return {\n      span: interval * 1000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\n      },\n      fmt: function(d) {\n        return \"\" + (Morris.pad2(d.getHours())) + \":\" + (Morris.pad2(d.getMinutes())) + \":\" + (Morris.pad2(d.getSeconds()));\n      },\n      incr: function(d) {\n        return d.setUTCSeconds(d.getUTCSeconds() + interval);\n      }\n    };\n  };\n\n  Morris.LABEL_SPECS = {\n    \"decade\": {\n      span: 172800000000,\n      start: function(d) {\n        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 10);\n      }\n    },\n    \"year\": {\n      span: 17280000000,\n      start: function(d) {\n        return new Date(d.getFullYear(), 0, 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear());\n      },\n      incr: function(d) {\n        return d.setFullYear(d.getFullYear() + 1);\n      }\n    },\n    \"month\": {\n      span: 2419200000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), 1);\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1));\n      },\n      incr: function(d) {\n        return d.setMonth(d.getMonth() + 1);\n      }\n    },\n    \"week\": {\n      span: 604800000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 7);\n      }\n    },\n    \"day\": {\n      span: 86400000,\n      start: function(d) {\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      },\n      fmt: function(d) {\n        return \"\" + (d.getFullYear()) + \"-\" + (Morris.pad2(d.getMonth() + 1)) + \"-\" + (Morris.pad2(d.getDate()));\n      },\n      incr: function(d) {\n        return d.setDate(d.getDate() + 1);\n      }\n    },\n    \"hour\": minutesSpecHelper(60),\n    \"30min\": minutesSpecHelper(30),\n    \"15min\": minutesSpecHelper(15),\n    \"10min\": minutesSpecHelper(10),\n    \"5min\": minutesSpecHelper(5),\n    \"minute\": minutesSpecHelper(1),\n    \"30sec\": secondsSpecHelper(30),\n    \"15sec\": secondsSpecHelper(15),\n    \"10sec\": secondsSpecHelper(10),\n    \"5sec\": secondsSpecHelper(5),\n    \"second\": secondsSpecHelper(1)\n  };\n\n  Morris.AUTO_LABEL_ORDER = [\"decade\", \"year\", \"month\", \"week\", \"day\", \"hour\", \"30min\", \"15min\", \"10min\", \"5min\", \"minute\", \"30sec\", \"15sec\", \"10sec\", \"5sec\", \"second\"];\n\n  Morris.Area = (function(_super) {\n    var areaDefaults;\n\n    __extends(Area, _super);\n\n    areaDefaults = {\n      fillOpacity: 'auto',\n      behaveLikeLine: false\n    };\n\n    function Area(options) {\n      var areaOptions;\n      if (!(this instanceof Morris.Area)) {\n        return new Morris.Area(options);\n      }\n      areaOptions = $.extend({}, areaDefaults, options);\n      this.cumulative = !areaOptions.behaveLikeLine;\n      if (areaOptions.fillOpacity === 'auto') {\n        areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\n      }\n      Area.__super__.constructor.call(this, areaOptions);\n    }\n\n    Area.prototype.calcPoints = function() {\n      var row, total, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        row = _ref[_i];\n        row._x = this.transX(row.x);\n        total = 0;\n        row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (this.options.behaveLikeLine) {\n              _results1.push(this.transY(y));\n            } else {\n              total += y || 0;\n              _results1.push(this.transY(total));\n            }\n          }\n          return _results1;\n        }).call(this);\n        _results.push(row._ymax = Math.max.apply(Math, row._y));\n      }\n      return _results;\n    };\n\n    Area.prototype.drawSeries = function() {\n      var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\n      this.seriesPoints = [];\n      if (this.options.behaveLikeLine) {\n        range = (function() {\n          _results = [];\n          for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this);\n      } else {\n        range = (function() {\n          _results1 = [];\n          for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--){ _results1.push(_j); }\n          return _results1;\n        }).apply(this);\n      }\n      _results2 = [];\n      for (_k = 0, _len = range.length; _k < _len; _k++) {\n        i = range[_k];\n        this._drawFillFor(i);\n        this._drawLineFor(i);\n        _results2.push(this._drawPointFor(i));\n      }\n      return _results2;\n    };\n\n    Area.prototype._drawFillFor = function(index) {\n      var path;\n      path = this.paths[index];\n      if (path !== null) {\n        path = path + (\"L\" + (this.transX(this.xmax)) + \",\" + this.bottom + \"L\" + (this.transX(this.xmin)) + \",\" + this.bottom + \"Z\");\n        return this.drawFilledPath(path, this.fillForSeries(index));\n      }\n    };\n\n    Area.prototype.fillForSeries = function(i) {\n      var color;\n      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\n      return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\n    };\n\n    Area.prototype.drawFilledPath = function(path, fill) {\n      return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\n    };\n\n    return Area;\n\n  })(Morris.Line);\n\n  Morris.Bar = (function(_super) {\n    __extends(Bar, _super);\n\n    function Bar(options) {\n      this.onHoverOut = __bind(this.onHoverOut, this);\n      this.onHoverMove = __bind(this.onHoverMove, this);\n      this.onGridClick = __bind(this.onGridClick, this);\n      if (!(this instanceof Morris.Bar)) {\n        return new Morris.Bar(options);\n      }\n      Bar.__super__.constructor.call(this, $.extend({}, options, {\n        parseTime: false\n      }));\n    }\n\n    Bar.prototype.init = function() {\n      this.cumulative = this.options.stacked;\n      if (this.options.hideHover !== 'always') {\n        this.hover = new Morris.Hover({\n          parent: this.el\n        });\n        this.on('hovermove', this.onHoverMove);\n        this.on('hoverout', this.onHoverOut);\n        return this.on('gridclick', this.onGridClick);\n      }\n    };\n\n    Bar.prototype.defaults = {\n      barSizeRatio: 0.75,\n      barGap: 3,\n      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\n      barOpacity: 1.0,\n      barRadius: [0, 0, 0, 0],\n      xLabelMargin: 50,\n      horizontal: false,\n      shown: true\n    };\n\n    Bar.prototype.calc = function() {\n      var _ref;\n      this.calcBars();\n      if (this.options.hideHover === false) {\n        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\n      }\n    };\n\n    Bar.prototype.calcBars = function() {\n      var idx, row, y, _i, _len, _ref, _results;\n      _ref = this.data;\n      _results = [];\n      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\n        row = _ref[idx];\n        row._x = this.xStart + this.xSize * (idx + 0.5) / this.data.length;\n        _results.push(row._y = (function() {\n          var _j, _len1, _ref1, _results1;\n          _ref1 = row.y;\n          _results1 = [];\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            y = _ref1[_j];\n            if (y != null) {\n              _results1.push(this.transY(y));\n            } else {\n              _results1.push(null);\n            }\n          }\n          return _results1;\n        }).call(this));\n      }\n      return _results;\n    };\n\n    Bar.prototype.draw = function() {\n      var _ref;\n      if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\n        this.drawXAxis();\n      }\n      return this.drawSeries();\n    };\n\n    Bar.prototype.drawXAxis = function() {\n      var angle, basePos, i, label, labelBox, margin, maxSize, offset, prevAngleMargin, prevLabelMargin, row, size, startPos, textBox, _i, _ref, _results;\n      if (!this.options.horizontal) {\n        basePos = this.getXAxisLabelY();\n      } else {\n        basePos = this.getYAxisLabelX();\n      }\n      prevLabelMargin = null;\n      prevAngleMargin = null;\n      _results = [];\n      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        row = this.data[this.data.length - 1 - i];\n        if (!this.options.horizontal) {\n          label = this.drawXAxisLabel(row._x, basePos, row.label);\n        } else {\n          label = this.drawYAxisLabel(basePos, row._x - 0.5 * this.options.gridTextSize, row.label);\n        }\n        if (!this.options.horizontal) {\n          angle = this.options.xLabelAngle;\n        } else {\n          angle = 0;\n        }\n        textBox = label.getBBox();\n        label.transform(\"r\" + (-angle));\n        labelBox = label.getBBox();\n        label.transform(\"t0,\" + (labelBox.height / 2) + \"...\");\n        if (angle !== 0) {\n          offset = -0.5 * textBox.width * Math.cos(angle * Math.PI / 180.0);\n          label.transform(\"t\" + offset + \",0...\");\n        }\n        if (!this.options.horizontal) {\n          startPos = labelBox.x;\n          size = labelBox.width;\n          maxSize = this.el.width();\n        } else {\n          startPos = labelBox.y;\n          size = labelBox.height;\n          maxSize = this.el.height();\n        }\n        if (((prevLabelMargin == null) || prevLabelMargin >= startPos + size || (prevAngleMargin != null) && prevAngleMargin >= startPos) && startPos >= 0 && (startPos + size) < maxSize) {\n          if (angle !== 0) {\n            margin = 1.25 * this.options.gridTextSize / Math.sin(angle * Math.PI / 180.0);\n            prevAngleMargin = startPos - margin;\n          }\n          if (!this.options.horizontal) {\n            _results.push(prevLabelMargin = startPos - this.options.xLabelMargin);\n          } else {\n            _results.push(prevLabelMargin = startPos);\n          }\n        } else {\n          _results.push(label.remove());\n        }\n      }\n      return _results;\n    };\n\n    Bar.prototype.getXAxisLabelY = function() {\n      return this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\n    };\n\n    Bar.prototype.drawSeries = function() {\n      var barWidth, bottom, groupWidth, i, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos, _i, _ref;\n      groupWidth = this.xSize / this.options.data.length;\n      if (this.options.stacked) {\n        numBars = 1;\n      } else {\n        numBars = 0;\n        for (i = _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n          if (this.hasToShow(i)) {\n            numBars += 1;\n          }\n        }\n      }\n      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\n      if (this.options.barSize) {\n        barWidth = Math.min(barWidth, this.options.barSize);\n      }\n      spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\n      leftPadding = spaceLeft / 2;\n      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\n      return this.bars = (function() {\n        var _j, _len, _ref1, _results;\n        _ref1 = this.data;\n        _results = [];\n        for (idx = _j = 0, _len = _ref1.length; _j < _len; idx = ++_j) {\n          row = _ref1[idx];\n          lastTop = 0;\n          _results.push((function() {\n            var _k, _len1, _ref2, _results1;\n            _ref2 = row._y;\n            _results1 = [];\n            for (sidx = _k = 0, _len1 = _ref2.length; _k < _len1; sidx = ++_k) {\n              ypos = _ref2[sidx];\n              if (!this.hasToShow(sidx)) {\n                continue;\n              }\n              if (ypos !== null) {\n                if (zeroPos) {\n                  top = Math.min(ypos, zeroPos);\n                  bottom = Math.max(ypos, zeroPos);\n                } else {\n                  top = ypos;\n                  bottom = this.bottom;\n                }\n                left = this.xStart + idx * groupWidth + leftPadding;\n                if (!this.options.stacked) {\n                  left += sidx * (barWidth + this.options.barGap);\n                }\n                size = bottom - top;\n                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\n                  if (!this.options.horizontal) {\n                    this.drawBar(this.xStart + idx * groupWidth, this.yEnd, groupWidth, this.ySize, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  } else {\n                    this.drawBar(this.yStart, this.xStart + idx * groupWidth, this.ySize, groupWidth, this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\n                  }\n                }\n                if (this.options.stacked) {\n                  top -= lastTop;\n                }\n                if (!this.options.horizontal) {\n                  this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  _results1.push(lastTop += size);\n                } else {\n                  this.drawBar(top, left, size, barWidth, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\n                  _results1.push(lastTop -= size);\n                }\n              } else {\n                _results1.push(null);\n              }\n            }\n            return _results1;\n          }).call(this));\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Bar.prototype.colorFor = function(row, sidx, type) {\n      var r, s;\n      if (typeof this.options.barColors === 'function') {\n        r = {\n          x: row.x,\n          y: row.y[sidx],\n          label: row.label\n        };\n        s = {\n          index: sidx,\n          key: this.options.ykeys[sidx],\n          label: this.options.labels[sidx]\n        };\n        return this.options.barColors.call(this, r, s, type);\n      } else {\n        return this.options.barColors[sidx % this.options.barColors.length];\n      }\n    };\n\n    Bar.prototype.hitTest = function(x, y) {\n      var pos;\n      if (this.data.length === 0) {\n        return null;\n      }\n      if (!this.options.horizontal) {\n        pos = x;\n      } else {\n        pos = y;\n      }\n      pos = Math.max(Math.min(pos, this.xEnd), this.xStart);\n      return Math.min(this.data.length - 1, Math.floor((pos - this.xStart) / (this.xSize / this.data.length)));\n    };\n\n    Bar.prototype.onGridClick = function(x, y) {\n      var index;\n      index = this.hitTest(x, y);\n      return this.fire('click', index, this.data[index].src, x, y);\n    };\n\n    Bar.prototype.onHoverMove = function(x, y) {\n      var index, _ref;\n      index = this.hitTest(x, y);\n      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\n    };\n\n    Bar.prototype.onHoverOut = function() {\n      if (this.options.hideHover !== false) {\n        return this.hover.hide();\n      }\n    };\n\n    Bar.prototype.hoverContentForRow = function(index) {\n      var content, j, row, x, y, _i, _len, _ref;\n      row = this.data[index];\n      content = $(\"<div class='morris-hover-row-label'>\").text(row.label);\n      content = content.prop('outerHTML');\n      _ref = row.y;\n      for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\n        y = _ref[j];\n        if (this.options.labels[j] === false) {\n          continue;\n        }\n        content += \"<div class='morris-hover-point' style='color: \" + (this.colorFor(row, j, 'label')) + \"'>\\n  \" + this.options.labels[j] + \":\\n  \" + (this.yLabelFormat(y, j)) + \"\\n</div>\";\n      }\n      if (typeof this.options.hoverCallback === 'function') {\n        content = this.options.hoverCallback(index, this.options, content, row.src);\n      }\n      if (!this.options.horizontal) {\n        x = this.left + (index + 0.5) * this.width / this.data.length;\n        return [content, x];\n      } else {\n        x = this.left + 0.5 * this.width;\n        y = this.top + (index + 0.5) * this.height / this.data.length;\n        return [content, x, y, true];\n      }\n    };\n\n    Bar.prototype.drawXAxisLabel = function(xPos, yPos, text) {\n      var label;\n      return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\n    };\n\n    Bar.prototype.drawBar = function(xPos, yPos, width, height, barColor, opacity, radiusArray) {\n      var maxRadius, path;\n      maxRadius = Math.max.apply(Math, radiusArray);\n      if (maxRadius === 0 || maxRadius > height) {\n        path = this.raphael.rect(xPos, yPos, width, height);\n      } else {\n        path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\n      }\n      return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\n    };\n\n    Bar.prototype.roundedRect = function(x, y, w, h, r) {\n      if (r == null) {\n        r = [0, 0, 0, 0];\n      }\n      return [\"M\", x, r[0] + y, \"Q\", x, y, x + r[0], y, \"L\", x + w - r[1], y, \"Q\", x + w, y, x + w, y + r[1], \"L\", x + w, y + h - r[2], \"Q\", x + w, y + h, x + w - r[2], y + h, \"L\", x + r[3], y + h, \"Q\", x, y + h, x, y + h - r[3], \"Z\"];\n    };\n\n    return Bar;\n\n  })(Morris.Grid);\n\n  Morris.Donut = (function(_super) {\n    __extends(Donut, _super);\n\n    Donut.prototype.defaults = {\n      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\n      backgroundColor: '#FFFFFF',\n      labelColor: '#000000',\n      formatter: Morris.commas,\n      resize: false\n    };\n\n    function Donut(options) {\n      this.resizeHandler = __bind(this.resizeHandler, this);\n      this.select = __bind(this.select, this);\n      this.click = __bind(this.click, this);\n      var _this = this;\n      if (!(this instanceof Morris.Donut)) {\n        return new Morris.Donut(options);\n      }\n      this.options = $.extend({}, this.defaults, options);\n      if (typeof options.element === 'string') {\n        this.el = $(document.getElementById(options.element));\n      } else {\n        this.el = $(options.element);\n      }\n      if (this.el === null || this.el.length === 0) {\n        throw new Error(\"Graph placeholder not found.\");\n      }\n      if (options.data === void 0 || options.data.length === 0) {\n        return;\n      }\n      this.raphael = new Raphael(this.el[0]);\n      if (this.options.resize) {\n        $(window).bind('resize', function(evt) {\n          if (_this.timeoutId != null) {\n            window.clearTimeout(_this.timeoutId);\n          }\n          return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\n        });\n      }\n      this.setData(options.data);\n    }\n\n    Donut.prototype.redraw = function() {\n      var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n      this.raphael.clear();\n      cx = this.el.width() / 2;\n      cy = this.el.height() / 2;\n      w = (Math.min(cx, cy) - 10) / 3;\n      total = 0;\n      _ref = this.values;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        value = _ref[_i];\n        total += value;\n      }\n      min = 5 / (2 * w);\n      C = 1.9999 * Math.PI - min * this.data.length;\n      last = 0;\n      idx = 0;\n      this.segments = [];\n      _ref1 = this.values;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        value = _ref1[i];\n        next = last + min + C * (value / total);\n        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\n        seg.render();\n        this.segments.push(seg);\n        seg.on('hover', this.select);\n        seg.on('click', this.click);\n        last = next;\n        idx += 1;\n      }\n      this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\n      this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\n      max_value = Math.max.apply(Math, this.values);\n      idx = 0;\n      _ref2 = this.values;\n      _results = [];\n      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n        value = _ref2[_k];\n        if (value === max_value) {\n          this.select(idx);\n          break;\n        }\n        _results.push(idx += 1);\n      }\n      return _results;\n    };\n\n    Donut.prototype.setData = function(data) {\n      var row;\n      this.data = data;\n      this.values = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.data;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          row = _ref[_i];\n          _results.push(parseFloat(row.value));\n        }\n        return _results;\n      }).call(this);\n      return this.redraw();\n    };\n\n    Donut.prototype.click = function(idx) {\n      return this.fire('click', idx, this.data[idx]);\n    };\n\n    Donut.prototype.select = function(idx) {\n      var row, s, segment, _i, _len, _ref;\n      _ref = this.segments;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        s = _ref[_i];\n        s.deselect();\n      }\n      segment = this.segments[idx];\n      segment.select();\n      row = this.data[idx];\n      return this.setLabels(row.label, this.options.formatter(row.value, row));\n    };\n\n    Donut.prototype.setLabels = function(label1, label2) {\n      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\n      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\n      maxWidth = 1.8 * inner;\n      maxHeightTop = inner / 2;\n      maxHeightBottom = inner / 3;\n      this.text1.attr({\n        text: label1,\n        transform: ''\n      });\n      text1bbox = this.text1.getBBox();\n      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\n      this.text1.attr({\n        transform: \"S\" + text1scale + \",\" + text1scale + \",\" + (text1bbox.x + text1bbox.width / 2) + \",\" + (text1bbox.y + text1bbox.height)\n      });\n      this.text2.attr({\n        text: label2,\n        transform: ''\n      });\n      text2bbox = this.text2.getBBox();\n      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\n      return this.text2.attr({\n        transform: \"S\" + text2scale + \",\" + text2scale + \",\" + (text2bbox.x + text2bbox.width / 2) + \",\" + text2bbox.y\n      });\n    };\n\n    Donut.prototype.drawEmptyDonutLabel = function(xPos, yPos, color, fontSize, fontWeight) {\n      var text;\n      text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\n      if (fontWeight != null) {\n        text.attr('font-weight', fontWeight);\n      }\n      return text;\n    };\n\n    Donut.prototype.resizeHandler = function() {\n      this.timeoutId = null;\n      this.raphael.setSize(this.el.width(), this.el.height());\n      return this.redraw();\n    };\n\n    return Donut;\n\n  })(Morris.EventEmitter);\n\n  Morris.DonutSegment = (function(_super) {\n    __extends(DonutSegment, _super);\n\n    function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\n      this.cx = cx;\n      this.cy = cy;\n      this.inner = inner;\n      this.outer = outer;\n      this.color = color;\n      this.backgroundColor = backgroundColor;\n      this.index = index;\n      this.raphael = raphael;\n      this.deselect = __bind(this.deselect, this);\n      this.select = __bind(this.select, this);\n      this.sin_p0 = Math.sin(p0);\n      this.cos_p0 = Math.cos(p0);\n      this.sin_p1 = Math.sin(p1);\n      this.cos_p1 = Math.cos(p1);\n      this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\n      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\n      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\n      this.hilight = this.calcArc(this.inner);\n    }\n\n    DonutSegment.prototype.calcArcPoints = function(r) {\n      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\n    };\n\n    DonutSegment.prototype.calcSegment = function(r1, r2) {\n      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\n      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r1 + \",\" + r1 + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1) + (\"L\" + ox1 + \",\" + oy1) + (\"A\" + r2 + \",\" + r2 + \",0,\" + this.is_long + \",1,\" + ox0 + \",\" + oy0) + \"Z\";\n    };\n\n    DonutSegment.prototype.calcArc = function(r) {\n      var ix0, ix1, iy0, iy1, _ref;\n      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\n      return (\"M\" + ix0 + \",\" + iy0) + (\"A\" + r + \",\" + r + \",0,\" + this.is_long + \",0,\" + ix1 + \",\" + iy1);\n    };\n\n    DonutSegment.prototype.render = function() {\n      var _this = this;\n      this.arc = this.drawDonutArc(this.hilight, this.color);\n      return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {\n        return _this.fire('hover', _this.index);\n      }, function() {\n        return _this.fire('click', _this.index);\n      });\n    };\n\n    DonutSegment.prototype.drawDonutArc = function(path, color) {\n      return this.raphael.path(path).attr({\n        stroke: color,\n        'stroke-width': 2,\n        opacity: 0\n      });\n    };\n\n    DonutSegment.prototype.drawDonutSegment = function(path, fillColor, strokeColor, hoverFunction, clickFunction) {\n      return this.raphael.path(path).attr({\n        fill: fillColor,\n        stroke: strokeColor,\n        'stroke-width': 3\n      }).hover(hoverFunction).click(clickFunction);\n    };\n\n    DonutSegment.prototype.select = function() {\n      if (!this.selected) {\n        this.seg.animate({\n          path: this.selectedPath\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 1\n        }, 150, '<>');\n        return this.selected = true;\n      }\n    };\n\n    DonutSegment.prototype.deselect = function() {\n      if (this.selected) {\n        this.seg.animate({\n          path: this.path\n        }, 150, '<>');\n        this.arc.animate({\n          opacity: 0\n        }, 150, '<>');\n        return this.selected = false;\n      }\n    };\n\n    return DonutSegment;\n\n  })(Morris.EventEmitter);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.js\n// module id = 2\n// module chunks = 0","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 3\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/index.js!./morris.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../css-loader/index.js!./morris.css\", function() {\n\t\t\tvar newContent = require(\"!!../css-loader/index.js!./morris.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/morris.js/morris.css\n// module id = 4\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./area-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-0d38ae04!../../node_modules/vue-loader/lib/selector?type=template&index=0!./area-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/area-chart.vue\n// module id = 5\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./bar-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-5eca0318!../../node_modules/vue-loader/lib/selector?type=template&index=0!./bar-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/bar-chart.vue\n// module id = 6\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./donut-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-6b63467a!../../node_modules/vue-loader/lib/selector?type=template&index=0!./donut-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/donut-chart.vue\n// module id = 7\n// module chunks = 0","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./line-chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-37bc98b6!../../node_modules/vue-loader/lib/selector?type=template&index=0!./line-chart.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/line-chart.vue\n// module id = 8\n// module chunks = 0","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'area-chart',\n\n  mixins: [ ChartProps.area ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['lineColors']) {\n          this.chart.options['lineColors'] = Converter.toObject(this['lineColors'])\n        }\n        \n        this.chart.setData(Converter.toObject(this.data))\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      resize: Converter.toBoolean(this.resize),\n      labels: Converter.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: Converter.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: Converter.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity,\n      behaveLikeLine: this.behaveLikeLine\n    }\n\n    this.addOptionAsObject('lineColors', options)\n    this.addOption('xLabels', options)\n    this.addOptionAsObject('pointFillColors', options)\n    this.addOptionAsObject('pointStrokeColors', options)\n    this.addOption('dateFormat', options)\n    this.addOption('xLabelFormat', options)\n    this.addOption('yLabelFormat', options)\n    this.addOptionAsObject('goals', options)\n    this.addOptionAsObject('goalLineColors', options)\n    this.addOptionAsObject('events', options)\n    this.addOptionAsObject('eventLineColors', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Area(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// area-chart.vue?238ec1ec","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'bar-chart',\n\n  mixins: [ ChartProps.bar ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['barColors']) {\n          this.chart.options['barColors'] = Converter.toObject(this['barColors'])\n        }\n\n        this.chart.setData(this.data)\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      labels: Converter.toObject(this.labels),\n      resize: Converter.toBoolean(this.resize),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      axes: Converter.toBoolean(this.axes),\n      hideHover: this.hideHover,\n      horizontal: Converter.toBoolean(this.horizontal),\n      stacked: Converter.toBoolean(this.stacked),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize\n    }\n\n    this.addOptionAsObject('barColors', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Bar(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// bar-chart.vue?2cb3859f","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'donut-chart',\n\n  mixins: [ ChartProps.donut ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        if (this.data && this.data.length > 0 && !this.chart) {\n          this.createChart ()\n        }\n\n        if (this.chart) {\n          if (this['colors']) {\n            this.chart.options['colors'] = Converter.toObject(this['colors'])\n          }\n\n          this.chart.setData(Converter.toObject(this.data))\n        }\n      })\n    }\n  },\n  \n  mounted () {\n    if (this.data && this.data.length > 0) {\n      this.createChart()\n    }\n  },\n\n  methods: {\n    createChart () {\n      let options = {\n        element: this.id,\n        data: Converter.toObject(this.data),\n        resize: Converter.toBoolean(this.resize)\n      }\n\n      this.addOptionAsObject('colors', options)\n      this.addOption('formatter', options)\n\n      this.chart = Morris.Donut(options)\n    }\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// donut-chart.vue?4fd0b526","<template>\n  <div :id=\"id\"></div>\n</template>\n\n<script>\nimport 'morris.js/morris'\nimport 'morris.js/morris.css'\nimport Converter from '../util/converter'\nimport ChartProps from './chart-mixins'\n\nexport default {\n  name: 'line-chart',\n\n  mixins: [ ChartProps.line ],\n\n  data () {\n    return {\n      chart: null\n    }\n  },\n\n  watch: {\n    data (val) {\n      this.$nextTick(() => {\n        this.chart.options.labels = Converter.toObject(this.labels)\n        this.chart.options.xkey = this.xkey\n        this.chart.options.ykeys = Converter.toObject(this.ykeys)\n\n        if (this['lineColors']) {\n          this.chart.options['lineColors'] = Converter.toObject(this['lineColors'])\n        }\n\n        this.chart.setData(Converter.toObject(this.data))\n      })\n    }\n  },\n\n  mounted () {\n    let options = {\n      element: this.id,\n      data: Converter.toObject(this.data),\n      resize: Converter.toBoolean(this.resize),\n      labels: Converter.toObject(this.labels),\n      xkey: this.xkey,\n      ykeys: Converter.toObject(this.ykeys),\n      grid: Converter.toBoolean(this.grid),\n      gridTextColor: this.gridTextColor,\n      gridTextSize: Converter.toInt(this.gridTextSize),\n      gridTextFamily: this.gridTextFamily,\n      gridTextWeight: this.gridTextWeight,\n      lineWidth: this.lineWidth,\n      pointSize: this.pointSize,\n      ymax: this.ymax,\n      ymin: this.ymin,\n      smooth: Converter.toBoolean(this.smooth),\n      hideHover: this.hideHover,\n      parseTime: Converter.toBoolean(this.parseTime),\n      postUnits: this.postUnits,\n      preUnits: this.preUnits,\n      xLabelAngle: this.xLabelAngle,\n      goalStrokeWidth: this.goalStrokeWidth,\n      eventStrokeWidth: this.eventStrokeWidth,\n      fillOpacity: this.fillOpacity\n    }\n\n    this.addOptionAsObject('lineColors', options)\n    this.addOption('xLabels', options)\n    this.addOptionAsObject('pointFillColors', options)\n    this.addOptionAsObject('pointStrokeColors', options)\n    this.addOption('dateFormat', options)\n    this.addOption('xLabelFormat', options)\n    this.addOption('yLabelFormat', options)\n    this.addOptionAsObject('goals', options)\n    this.addOptionAsObject('goalLineColors', options)\n    this.addOptionAsObject('events', options)\n    this.addOptionAsObject('eventLineColors', options)\n    this.addOption('hoverCallback', options)\n\n    this.chart = Morris.Line(options)\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// line-chart.vue?5fb55a26","import DonutChart from './components/donut-chart.vue'\nimport BarChart from './components/bar-chart.vue'\nimport LineChart from './components/line-chart.vue'\nimport AreaChart from './components/area-chart.vue'\n\nconst VueMorris = {\n  DonutChart, BarChart, LineChart, AreaChart\n}\n\nmodule.exports = VueMorris\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","exports = module.exports = require(\"../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".morris-hover{position:absolute;z-index:1000}.morris-hover.morris-default-style{border-radius:10px;padding:6px;color:#666;background:hsla(0,0%,100%,.8);border:2px solid hsla(0,0%,90%,.8);font-family:sans-serif;font-size:12px;text-align:center}.morris-hover.morris-default-style .morris-hover-row-label{font-weight:700;margin:.25em 0}.morris-hover.morris-default-style .morris-hover-point{white-space:nowrap;margin:.1em 0}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/morris.js/morris.css\n// module id = 14\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 15\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-0d38ae04!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/area-chart.vue\n// module id = 16\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-37bc98b6!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/line-chart.vue\n// module id = 17\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-5eca0318!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/bar-chart.vue\n// module id = 18\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-6b63467a!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/donut-chart.vue\n// module id = 19\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/addStyles.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}